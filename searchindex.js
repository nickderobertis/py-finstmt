Search.setIndex({"docnames": ["api/finstmt", "api/finstmt.bs", "api/finstmt.clean", "api/finstmt.combined", "api/finstmt.config_manage", "api/finstmt.findata", "api/finstmt.forecast", "api/finstmt.forecast.models", "api/finstmt.inc", "api/finstmt.items", "api/finstmt.loaders", "api/finstmt.resolver", "api/modules", "auto_examples/forecasting", "auto_examples/index", "auto_examples/manipulating_statements", "auto_examples/sg_execution_times", "index", "tutorial"], "filenames": ["api/finstmt.rst", "api/finstmt.bs.rst", "api/finstmt.clean.rst", "api/finstmt.combined.rst", "api/finstmt.config_manage.rst", "api/finstmt.findata.rst", "api/finstmt.forecast.rst", "api/finstmt.forecast.models.rst", "api/finstmt.inc.rst", "api/finstmt.items.rst", "api/finstmt.loaders.rst", "api/finstmt.resolver.rst", "api/modules.rst", "auto_examples/forecasting.rst", "auto_examples/index.rst", "auto_examples/manipulating_statements.rst", "auto_examples/sg_execution_times.rst", "index.md", "tutorial.md"], "titles": ["finstmt package", "finstmt.bs package", "finstmt.clean package", "finstmt.combined package", "finstmt.config_manage package", "finstmt.findata package", "finstmt.forecast package", "finstmt.forecast.models package", "finstmt.inc package", "finstmt.items package", "finstmt.loaders package", "finstmt.resolver package", "finstmt", "Forecasting Financial Statements with <code class=\"docutils literal notranslate\"><span class=\"pre\">finstmt</span></code>", "Examples", "Manipulating Statements", "Computation times", "Welcome to finstmt documentation!", "Getting started with finstmt"], "terms": {"work": [0, 13, 15, 17], "financi": [0, 3, 4, 5, 6, 10, 14, 16, 17, 18], "statement": [0, 1, 5, 8, 10, 12, 14, 16, 17, 18], "data": [0, 2, 3, 5, 12, 13, 15, 17], "python": [0, 13, 14, 15], "can": [0, 10, 13, 15, 17], "calcul": [0, 3, 6, 15, 17, 18], "free": [0, 15, 17], "cash": [0, 1, 13, 15, 17], "flow": [0, 15, 17], "help": [0, 17], "project": [0, 17], "automat": [0, 3], "balanc": [0, 1, 3, 4, 6, 11, 13, 15, 17, 18], "sheet": [0, 1, 3, 4, 6, 13, 15, 17, 18], "b": [0, 12, 13, 15], "config": [0, 2, 3, 4, 7, 11, 12, 13, 15], "balancesheetdata": [0, 1], "__init__": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11], "cash_and_st_invest": [0, 1], "common_stock": [0, 1], "current_lt_debt": [0, 1], "def_tax_lt": [0, 1], "def_tax_st": [0, 1], "deferred_rev": [0, 1], "dep": [0, 1, 8], "deposit_liab": [0, 1], "goodwil": [0, 1, 8, 13, 15], "gross_pp": [0, 1, 3], "inventori": [0, 1, 13, 15], "items_config": [0, 1, 5, 8], "lt_debt": [0, 1], "lt_invest": [0, 1], "minority_interest": [0, 1], "net_pp": [0, 1, 3], "nwc": [0, 1], "other_current_asset": [0, 1], "other_current_liab": [0, 1], "other_incom": [0, 1], "other_lt_asset": [0, 1], "other_lt_liab": [0, 1], "payabl": [0, 1, 13, 15], "receiv": [0, 1, 13, 15], "retained_earn": [0, 1], "st_debt": [0, 1], "st_invest": [0, 1], "tax_liab_lt": [0, 1], "tax_liab_st": [0, 1], "total_asset": [0, 1, 6], "total_current_asset": [0, 1], "total_current_liab": [0, 1], "total_debt": [0, 1, 8, 13], "total_equ": [0, 1], "total_liab": [0, 1], "total_liab_and_equ": [0, 1, 6], "total_non_current_asset": [0, 1], "total_non_current_liab": [0, 1], "main": [0, 3, 4, 12], "balancesheet": [0, 1, 3, 10, 13, 15, 17, 18], "statement_cl": [0, 1, 5, 8], "statement_nam": [0, 1, 5, 8], "clean": [0, 12], "name": [0, 5, 6, 12, 15], "standardize_name_for_look_up": [0, 2], "standardize_names_in_series_index": [0, 2], "combin": [0, 12], "financialstat": [0, 3, 6, 11, 13, 15, 17, 18], "all_config_item": [0, 3], "auto_adjust_config": [0, 3, 6], "balance_sheet": [0, 3, 6], "capex": [0, 3], "chang": [0, 3, 17], "copi": [0, 3], "date": [0, 3, 4, 5, 15], "fcf": [0, 3, 15], "forecast": [0, 3, 12, 14, 15, 16, 17], "forecast_assumpt": [0, 3, 13], "income_stat": [0, 3, 6], "item_is_empti": [0, 3, 5], "lag": [0, 3], "non_cash_expens": [0, 3], "config_manag": [0, 12], "base": [0, 1, 3, 5, 6, 8, 9, 12], "configmanagerbas": [0, 4], "balance_group": [0, 4, 11], "eq_subs_dict": [0, 4], "eqs_involv": [0, 4], "expr_for": [0, 4], "get": [0, 3, 4, 13], "get_valu": [0, 4], "item_determinant_kei": [0, 4], "item": [0, 3, 4, 5, 6, 8, 12, 13, 15], "set": [0, 4, 6, 15], "set_valu": [0, 4], "sympy_namespac": [0, 4, 11], "dataconfigmanag": [0, 1, 4, 5, 8], "config_dict": [0, 4], "kei": [0, 1, 3, 4, 5, 6, 8, 9, 13], "global_": [0, 12], "statementconfigmanag": [0, 4], "statementsconfigmanag": [0, 4], "dict": [0, 1, 4, 5, 6, 8, 11], "json": [0, 4], "updat": [0, 4, 13], "update_al": [0, 4, 13, 15], "findata": [0, 12, 13, 15], "databas": [0, 12, 13, 15], "findatabas": [0, 1, 5, 8], "as_dict": [0, 5], "from_seri": [0, 5], "get_sympy_subs_dict": [0, 5], "prior_stat": [0, 1, 5, 8], "to_seri": [0, 5, 6], "unextracted_nam": [0, 1, 5, 8], "statementsbas": [0, 12], "finstatementsbas": [0, 1, 5, 8], "freq": [0, 5, 6], "from_df": [0, 1, 3, 5, 8, 13, 15, 17, 18], "to_df": [0, 5], "combine_statement_df": [0, 5], "model": [0, 6, 13], "averag": [0, 6, 18], "averagemodel": [0, 6, 7], "fit": [0, 6, 7, 18], "mean": [0, 6, 7, 13, 18], "predict": [0, 6, 7, 18], "stderr": [0, 6, 7], "forecastmodel": [0, 6, 7], "desired_freq_t_multipli": [0, 6, 7], "historical_freq": [0, 6, 7], "last_historical_period": [0, 6, 7], "orig_seri": [0, 6, 7], "plot": [0, 7, 12, 13], "result": [0, 6, 7, 11, 13], "result_df": [0, 6, 7], "compare_freq_str": [0, 6, 7], "cagr": [0, 1, 6, 8, 13, 18], "cagrmodel": [0, 6, 7], "last_valu": [0, 6, 7], "chooser": [0, 6], "get_model": [0, 6, 7], "manual": [0, 6, 13], "manualforecastmodel": [0, 6, 7], "recent": [0, 6, 13, 18], "prophet": [0, 6], "fbprophetmodel": [0, 6, 7], "recentvaluemodel": [0, 6, 7], "trend": [0, 6, 13, 15, 18], "lineartrendmodel": [0, 6, 7], "model_result": [0, 6, 7], "forecastconfig": [0, 3, 6], "bs_diff_max": [0, 6, 11], "make_future_df_kwarg": [0, 6], "period": [0, 3, 4, 6, 13, 18], "prophet_kwarg": [0, 1, 6, 8], "timeout": [0, 6, 11], "forecastitemconfig": [0, 1, 6, 8, 9], "balance_with": [0, 1, 6, 8], "cap": [0, 1, 6, 8, 13], "floor": [0, 1, 6, 8, 13], "make_forecast": [0, 1, 6, 8], "manual_forecast": [0, 1, 6, 8], "method": [0, 1, 6, 8, 15, 18], "pct_of": [0, 1, 6, 8], "plug": [0, 1, 6, 8, 13], "datafram": [0, 2, 3, 5, 7, 10, 12], "add_cap_and_floor_to_df": [0, 6], "seri": [0, 2, 3, 5, 6, 7, 11], "to_manu": [0, 6, 13], "plot_forecast": [0, 6], "forecastedfinancialstat": [0, 6, 11, 13], "inc": [0, 1, 12, 13, 15], "incomestatementdata": [0, 8], "cog": [0, 8, 13], "dep_exp": [0, 8], "ebit": [0, 8, 13, 15], "ebt": [0, 8, 13], "effective_tax_r": [0, 8], "gain_on_sale_asset": [0, 8], "gain_on_sale_invest": [0, 8], "gross_profit": [0, 8], "impair": [0, 8, 13, 15], "int_exp": [0, 8], "net_incom": [0, 8], "op_exp": [0, 8], "other_op_exp": [0, 8], "rd_exp": [0, 8], "revenu": [0, 1, 8, 13, 15], "sga": [0, 8], "tax_exp": [0, 8], "incomestat": [0, 3, 8, 10, 13, 15, 17, 18], "itemconfig": [0, 1, 3, 4, 5, 8, 9, 11], "arbitrary_types_allow": [0, 9], "display_nam": [0, 1, 8, 9], "expr_str": [0, 1, 8, 9], "extract_nam": [0, 1, 8, 9], "force_posit": [0, 1, 8, 9], "forecast_config": [0, 1, 8, 9, 13, 15], "primary_nam": [0, 9], "loader": [0, 12], "capiq": [0, 12], "load_capiq_df": [0, 10], "resolv": [0, 12], "resolverbas": [0, 11], "all_eq": [0, 11], "num_period": [0, 11], "set_solve_eqs_and_full_subs_dict": [0, 11], "solve_eq": [0, 11], "subs_dict": [0, 11], "sympy_subs_dict": [0, 11], "t": [0, 1, 8, 11, 13, 15], "t_indexed_eq": [0, 11], "to_stat": [0, 11], "balancesheetbalancedexcept": [0, 11], "forecastresolv": [0, 11], "bs_balance_eq": [0, 11], "forecast_d": [0, 11], "plug_config": [0, 11], "plug_kei": [0, 11], "plug_x0": [0, 11], "resolve_balance_sheet": [0, 11], "plugresult": [0, 11], "fun": [0, 11], "is_timed_out": [0, 11], "met_goal": [0, 11], "re": [0, 1, 11], "start_tim": [0, 11], "time_elaps": [0, 11], "histori": [0, 12], "statementsresolv": [0, 11], "solv": [0, 12], "get_solve_eqs_and_full_subs_dict": [0, 11], "numpy_solv": [0, 11], "results_dict_to_sympy_dict": [0, 11], "solve_equ": [0, 11], "sympy_dict_to_results_dict": [0, 11], "item_series_is_empti": [0, 12], "": [0, 1, 13, 15], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17], "return": [0, 2, 3, 4, 5, 6, 7, 10, 11], "type": [0, 2, 3, 4, 5, 6, 7, 10, 11, 13], "bool": [0, 3, 5, 6, 9, 11], "except": [0, 11], "balancesheetnotbalancedexcept": [0, 12], "forecastexcept": [0, 12], "couldnotparseexcept": [0, 12], "finstmtexcept": [0, 12], "forecastnotfitexcept": [0, 12], "forecastnotpredictedexcept": [0, 12], "impropermanualforecastexcept": [0, 12], "invalidbalanceconfigexcept": [0, 12], "invalidbalanceplugsexcept": [0, 12], "invalidforecastequationexcept": [0, 12], "mismatchingdatesexcept": [0, 12], "missingdataexcept": [0, 12], "mixedfrequencyexcept": [0, 12], "nosuchitemexcept": [0, 12], "notacalculateditemexcept": [0, 12], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17], "none": [1, 4, 5, 6, 7, 8, 9, 11, 13], "factori": [1, 6, 8, 9], "0": [1, 4, 5, 8, 11, 13, 15, 16, 17], "option": [1, 5, 6, 7, 8, 9, 11], "float": [1, 4, 5, 6, 7, 8, 11], "union": [1, 4, 5, 6, 8], "list": [1, 3, 4, 5, 6, 8, 11, 13], "equival": [1, 13, 15], "equiv": 1, "true": [1, 3, 4, 5, 6, 8, 9, 11, 13], "level": [1, 8, 13], "growth": [1, 8, 13, 15, 18], "short": [1, 13, 15], "term": [1, 13, 15], "invest": [1, 8, 13, 15], "shortterm": 1, "st": 1, "fals": [1, 4, 6, 8, 11, 13], "total": [1, 6, 8, 13, 15, 16], "rec": 1, "account": 1, "ar": [1, 3, 13, 14, 15, 18], "inv": 1, "defer": [1, 13, 15], "tax": [1, 8, 13, 15], "asset": [1, 6, 8, 13, 15], "current": [1, 3, 6, 13, 15, 17], "def": 1, "curr": 1, "other": [1, 8, 13, 15], "oca": 1, "tca": 1, "gross": [1, 8, 13, 15], "properti": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15], "plant": [1, 13, 15], "equip": [1, 13, 15], "ppe": 1, "gr": 1, "accumul": [1, 13, 15], "depreci": [1, 8, 13, 15], "acc": 1, "accum": 1, "net": [1, 8, 13, 15], "intang": [1, 13, 15], "long": [1, 13, 15], "lt": 1, "longterm": 1, "non": [1, 13], "noncurr": 1, "ap": 1, "accru": 1, "expens": [1, 8, 13, 15], "exp": [1, 8], "debt": [1, 13, 15], "borrow": 1, "borrowst": 1, "portion": [1, 13, 15], "port": 1, "part": 1, "liabil": [1, 6, 13, 15], "liab": 1, "sale": [1, 8, 13, 15], "salesnon": 1, "currnoncurr": 1, "deposit": [1, 13, 15], "common": [1, 13, 15], "stock": [1, 13, 15], "share": [1, 15], "stockcommon": 1, "stocknet": 1, "netcommon": 1, "comprehens": [1, 13, 15], "incom": [1, 3, 4, 8, 13, 15, 17, 18], "comp": 1, "retain": [1, 13, 15], "earn": [1, 8, 13, 15], "deficit": 1, "minor": [1, 13, 15, 17], "interest": [1, 8, 13, 15], "int": [1, 3, 6, 8, 11, 15], "min": 1, "stockhold": [1, 13, 15], "equiti": [1, 6, 13, 15], "sharehold": 1, "hold": [1, 3, 8], "usual": [1, 8, 13], "wai": [1, 8, 13], "construct": [1, 8, 18], "i": [1, 3, 6, 7, 8, 13, 15, 17, 18], "exampl": [1, 3, 8, 13, 15, 17, 18], "bs_path": [1, 3, 13, 15, 17, 18], "r": [1, 3, 8, 13, 15, 17, 18], "wmt": [1, 3, 8, 17, 18], "xlsx": [1, 3, 8, 17, 18], "bs_df": [1, 3, 13, 15, 17, 18], "pd": [1, 3, 8, 13, 15, 17, 18], "read_excel": [1, 3, 8, 17, 18], "bs_data": [1, 3, 17, 18], "alia": [1, 5, 8], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "timestamp": [1, 3, 4, 5, 8], "us": [2, 4, 5, 6, 13, 14, 15, 18], "intern": [2, 4], "standard": 2, "befor": [2, 8, 13, 15], "look": [2, 17], "up": [2, 13], "match": 2, "note": [2, 13, 15], "inplac": 2, "object": [3, 4, 5, 6, 7, 9, 11, 13, 15], "all": [3, 4, 13, 14, 15], "paramet": [3, 4], "whether": [3, 6], "adjust": [3, 6], "configur": [3, 4, 6, 13], "load": [3, 10], "turn": 3, "off": [3, 13, 15], "normal": 3, "those": [3, 13], "which": [3, 6, 10, 13, 15], "For": [3, 4, 13, 17], "miss": 3, "start": 3, "instead": [3, 6], "inc_path": [3, 8, 13, 15, 17, 18], "inc_df": [3, 8, 13, 15, 17, 18], "inc_data": [3, 8, 17, 18], "stmt": [3, 11, 13, 15, 17, 18], "data_kei": 3, "between": 3, "thi": [3, 6, 13, 15, 17, 18], "last": [3, 15], "variabl": [3, 4, 11], "how": [3, 15], "would": 3, "access": 3, "kwarg": [3, 4, 5, 6, 11], "run": [3, 6, 15], "attribut": 3, "2": [3, 13, 15], "pass": [3, 6, 10, 13], "ha": [3, 13], "num_lag": 3, "number": [3, 15], "values_dict": 4, "t_offset": [4, 5, 11], "indexedbas": [4, 5, 11], "item_kei": 4, "include_self_eq": 4, "equal": [4, 11], "expr": [4, 11], "well": 4, "belong": 4, "config_kei": 4, "particular": 4, "ani": [4, 13, 15], "include_pct_of": 4, "for_forecast": 4, "entir": 4, "need": [4, 13, 15], "handl": 4, "valu": [4, 6, 13, 15, 18], "each": [4, 13, 15, 18], "individu": [4, 6], "manag": 4, "The": [4, 6, 7, 13, 15, 18], "sympi": 4, "namespac": 4, "contain": [4, 13, 17], "definit": 4, "an": [4, 6, 18], "time": [4, 13, 15], "singl": [4, 6, 15], "e": [4, 7], "g": [4, 7], "multipl": [4, 13, 15], "interfac": 4, "nest": 4, "sequenc": [4, 9], "arg": 5, "should": [5, 6, 13], "directli": 5, "classmethod": 5, "df": [5, 6], "disp_unextract": 5, "must": 5, "have": [5, 13, 15, 17], "column": 5, "index": [5, 13, 15, 17], "df2": 5, "oper": [5, 8, 13, 15], "built": 5, "function": 5, "add": 5, "5": [6, 7, 13, 15], "y": 6, "180": [6, 11, 15], "10000": 6, "auto": [6, 18], "onli": [6, 13], "support": 6, "fbprophet": [6, 18], "percentag": 6, "maximum": 6, "line": 6, "reach": 6, "minimum": 6, "do": 6, "make": [6, 13], "balance_item": 6, "process": 6, "after": [6, 13], "typic": 6, "just": [6, 13], "item_config": [6, 7, 11], "base_config": [6, 7], "pct_of_seri": 6, "pct_of_config": 6, "repres": 6, "ax": [6, 7, 13], "figsiz": [6, 7], "12": [6, 7, 13, 15], "figur": [6, 7, 13], "use_level": [6, 13], "replac": [6, 13, 15], "fcst_df": 6, "orig_data": 6, "orig_d": 6, "xlabel": [6, 7], "ylabel": [6, 7], "titl": [6, 7], "subset": [6, 13], "num_col": 6, "3": [6, 13, 15], "height_per_row": 6, "plot_width": 6, "15": [6, 13, 15], "multipli": [7, 15], "frequnci": 7, "versu": 7, "histor": [7, 15, 18], "frequenc": 7, "annual": [7, 18], "quarterli": 7, "4": [7, 13, 15], "datetim": 7, "freq1": 7, "freq2": 7, "ref_dat": 7, "1": [7, 13, 15], "2000": 7, "ol": 7, "regressionresult": 7, "rev": 8, "cost": [8, 13, 15], "good": [8, 13, 15], "sold": [8, 13, 15], "cor": 8, "profit": [8, 13, 15], "d": [8, 13, 15], "rd": 8, "research": 8, "develop": 8, "sg": [8, 13, 15], "A": [8, 15, 17], "sell": 8, "gener": [8, 13, 14, 15], "administr": 8, "admin": 8, "amort": [8, 13, 15], "da": 8, "op": [8, 15], "expensesincom": 8, "expenseincom": 8, "expincom": 8, "expensesinc": 8, "expenseinc": 8, "expinc": 8, "gain": [8, 13, 15], "loss": 8, "charg": 8, "writedown": 8, "write": 8, "down": 8, "includ": 8, "unusu": 8, "incl": 8, "pretax": 8, "pre": 8, "provis": 8, "file_path": 10, "sheet_nam": 10, "download": [10, 13, 14, 15], "from": [10, 13, 15, 17], "capit": 10, "iq": 10, "idx": 11, "forecast_dict": 11, "datetimeindex": 11, "arrai": 11, "x0": 11, "eq": 11, "eqs_for_sub": 11, "tupl": 11, "results_dict": 11, "substitut": 11, "round_result": 11, "s_dict": 11, "packag": [12, 17], "subpackag": [12, 17], "submodul": [12, 17], "modul": [12, 17], "check": [12, 17], "exc": [12, 17], "logger": [12, 17], "click": [13, 15], "here": [13, 15, 17], "full": [13, 15], "code": [13, 14, 15, 17], "your": [13, 15], "browser": [13, 15], "via": [13, 15, 18], "binder": [13, 15], "come": 13, "through": 13, "format": [13, 15], "web": [13, 15], "jupyt": [13, 14, 15], "notebook": [13, 14, 15, 18], "experi": [13, 15], "import": [13, 15, 17], "necessari": [13, 15], "panda": [13, 15, 17], "o": [13, 15], "chdir": [13, 15], "root_fold": [13, 15], "path": [13, 15], "sep": [13, 15], "join": [13, 15], "test": [13, 15], "stockrow": [13, 15], "cat": [13, 15], "annual_incom": [13, 15], "csv": [13, 15], "annual_b": [13, 15], "read_csv": [13, 15], "index_col": [13, 15], "home": [13, 15], "runner": [13, 15], "py": [13, 15, 16], "88": [13, 15], "userwarn": [13, 15], "previous": [13, 15], "had": [13, 15], "extract": [13, 15], "warn": [13, 15], "31": [13, 15], "2009": [13, 15], "2010": [13, 15], "2011": [13, 15], "2012": [13, 15], "2013": [13, 15], "2014": [13, 15], "2015": [13, 15], "2016": [13, 15], "2017": [13, 15], "2018": [13, 15], "32": [13, 15], "396": [13, 15], "000": [13, 15], "42": [13, 15], "588": [13, 15], "60": [13, 15], "138": [13, 15], "65": [13, 15], "875": [13, 15], "55": [13, 15], "656": [13, 15], "184": [13, 15], "47": [13, 15], "011": [13, 15], "38": [13, 15], "537": [13, 15], "45": [13, 15], "462": [13, 15], "54": [13, 15], "722": [13, 15], "24": [13, 15], "931": [13, 15], "281": [13, 15], "44": [13, 15], "404": [13, 15], "852": [13, 15], "41": [13, 15], "454": [13, 15], "342": [13, 15], "34": [13, 15], "133": [13, 15], "28": [13, 15], "640": [13, 15], "906": [13, 15], "37": [13, 15], "719": [13, 15], "7": [13, 15], "465": [13, 15], "11": [13, 15], "307": [13, 15], "734": [13, 15], "18": [13, 15], "023": [13, 15], "14": [13, 15], "202": [13, 15], "13": [13, 15], "842": [13, 15], "878": [13, 15], "9": [13, 15], "897": [13, 15], "556": [13, 15], "17": [13, 15, 16], "003": [13, 15], "amp": [13, 15], "421": [13, 15], "905": [13, 15], "297": [13, 15], "466": [13, 15], "046": [13, 15], "380": [13, 15], "119": [13, 15], "853": [13, 15], "850": [13, 15], "645": [13, 15], "248": [13, 15], "203": [13, 15], "919": [13, 15], "547": [13, 15], "6": [13, 15], "529": [13, 15], "951": [13, 15], "383": [13, 15], "999": [13, 15], "478": [13, 15], "888": [13, 15], "344": [13, 15], "8": [13, 15], "581": [13, 15], "450": [13, 15], "574": [13, 15], "10": [13, 15], "528": [13, 15], "093": [13, 15], "735": [13, 15], "096": [13, 15], "710": [13, 15], "014": [13, 15], "044": [13, 15], "676": [13, 15], "573": [13, 15], "628": [13, 15], "935": [13, 15], "630": [13, 15], "624": [13, 15], "249": [13, 15], "389": [13, 15], "343": [13, 15], "467": [13, 15], "484": [13, 15], "507": [13, 15], "505": [13, 15], "531": [13, 15], "625": [13, 15], "668": [13, 15], "648": [13, 15], "209": [13, 15], "108": [13, 15], "144": [13, 15], "428": [13, 15], "125": [13, 15], "845": [13, 15], "270": [13, 15], "968": [13, 15], "720": [13, 15], "319": [13, 15], "692": [13, 15], "916": [13, 15], "192": [13, 15], "339": [13, 15], "698": [13, 15], "895": [13, 15], "700": [13, 15], "928": [13, 15], "681": [13, 15], "789": [13, 15], "452": [13, 15], "512": [13, 15], "67": [13, 15], "754": [13, 15], "147": [13, 15], "867": [13, 15], "592": [13, 15], "057": [13, 15], "490": [13, 15], "081": [13, 15], "341": [13, 15], "460": [13, 15], "168": [13, 15], "261": [13, 15], "857": [13, 15], "27": [13, 15], "162": [13, 15], "849": [13, 15], "30": [13, 15], "803": [13, 15], "33": [13, 15], "911": [13, 15], "499": [13, 15], "772": [13, 15], "29": [13, 15], "088": [13, 15], "725": [13, 15], "899": [13, 15], "360": [13, 15], "587": [13, 15], "544": [13, 15], "205": [13, 15], "614": [13, 15], "018": [13, 15], "217": [13, 15], "810": [13, 15], "900": [13, 15], "335": [13, 15], "508": [13, 15], "967": [13, 15], "36": [13, 15], "244": [13, 15], "603": [13, 15], "386": [13, 15], "539": [13, 15], "395": [13, 15], "16": [13, 15], "461": [13, 15], "075": [13, 15], "577": [13, 15], "090": [13, 15], "322": [13, 15], "155": [13, 15], "419": [13, 15], "448": [13, 15], "958": [13, 15], "552": [13, 15], "770": [13, 15], "436": [13, 15], "369": [13, 15], "311": [13, 15], "114": [13, 15], "105": [13, 15], "164": [13, 15], "272": [13, 15], "257": [13, 15], "930": [13, 15], "424": [13, 15], "737": [13, 15], "558": [13, 15], "143": [13, 15], "489": [13, 15], "790": [13, 15], "693": [13, 15], "439": [13, 15], "821": [13, 15], "210": [13, 15], "43": [13, 15], "318": [13, 15], "46": [13, 15], "832": [13, 15], "561": [13, 15], "814": [13, 15], "834": [13, 15], "40": [13, 15], "718": [13, 15], "39": [13, 15], "038": [13, 15], "64": [13, 15], "020": [13, 15], "81": [13, 15], "218": [13, 15], "970": [13, 15], "84": [13, 15], "896": [13, 15], "78": [13, 15], "74": [13, 15], "704": [13, 15], "76": [13, 15], "962": [13, 15], "509": [13, 15], "993": [13, 15], "856": [13, 15], "161": [13, 15], "753": [13, 15], "560": [13, 15], "515": [13, 15], "487": [13, 15], "051": [13, 15], "784": [13, 15], "981": [13, 15], "391": [13, 15], "031": [13, 15], "501": [13, 15], "844": [13, 15], "965": [13, 15], "553": [13, 15], "975": [13, 15], "22": [13, 15], "357": [13, 15], "415": [13, 15], "877": [13, 15], "26": [13, 15], "242": [13, 15], "132": [13, 15], "21": [13, 15], "847": [13, 15], "20": [13, 15], "437": [13, 15], "944": [13, 15], "752": [13, 15], "25": [13, 15, 16], "169": [13, 15], "818": [13, 15], "23": [13, 15], "631": [13, 15], "418": [13, 15], "750": [13, 15], "285": [13, 15], "013": [13, 15], "783": [13, 15], "831": [13, 15], "638": [13, 15], "697": [13, 15], "146": [13, 15], "167": [13, 15], "426": [13, 15], "243": [13, 15], "763": [13, 15], "675": [13, 15], "459": [13, 15], "973": [13, 15], "721": [13, 15], "978": [13, 15], "215": [13, 15], "35": [13, 15], "359": [13, 15], "265": [13, 15], "211": [13, 15], "50": [13, 15], "738": [13, 15], "52": [13, 15, 16], "695": [13, 15], "816": [13, 15], "71": [13, 15], "388": [13, 15], "855": [13, 15], "63": [13, 15], "457": [13, 15, 16], "61": [13, 15], "491": [13, 15], "196": [13, 15], "429": [13, 15], "764": [13, 15], "328": [13, 15], "433": [13, 15], "898": [13, 15], "431": [13, 15], "035": [13, 15], "039": [13, 15], "684": [13, 15], "19": [13, 15], "711": [13, 15], "384": [13, 15], "219": [13, 15], "854": [13, 15], "887": [13, 15], "246": [13, 15], "377": [13, 15], "301": [13, 15], "427": [13, 15], "740": [13, 15], "824": [13, 15], "883": [13, 15], "532": [13, 15], "811": [13, 15], "746": [13, 15], "809": [13, 15], "213": [13, 15], "766": [13, 15], "080": [13, 15], "59": [13, 15], "519": [13, 15], "80": [13, 15], "699": [13, 15], "920": [13, 15], "829": [13, 15], "601": [13, 15], "266": [13, 15], "To": 13, "same": 13, "you": [13, 15], "Then": 13, "origin": 13, "stmts2": 13, "step": 13, "alreadi": 13, "so": 13, "doesn": [13, 15], "actual": 13, "effect": 13, "go": 13, "produc": 13, "It": [13, 15], "practic": 13, "fcst": [13, 15], "00": [13, 15, 16], "appropri": 13, "y_0": 13, "neg": 13, "messag": 13, "100": [13, 15], "327": 13, "97it": 13, "y_t": 13, "92": 13, "338": [13, 15], "90it": 13, "367": 13, "61it": 13, "rais": 13, "becaus": 13, "suitabl": 13, "begin": 13, "now": [13, 15], "2019": [13, 15], "2020": [13, 15], "2021": 13, "2022": 13, "2023": 13, "57": [13, 15], "667": 13, "220": 13, "438": [13, 15], "957": 13, "074": [13, 15], "041": 13, "741": 13, "488": [13, 15], "564": 13, "120": [13, 15], "608": 13, "313": 13, "545": 13, "500": [13, 15], "271": 13, "707": 13, "712": [13, 15], "513": 13, "153": [13, 15], "118": [13, 15], "394": [13, 15], "917": 13, "353": 13, "674": 13, "493": 13, "795": 13, "456": 13, "804": 13, "334": [13, 15], "028": [13, 15], "865": 13, "411": 13, "330": 13, "983": 13, "186": [13, 15], "950": [13, 15], "236": 13, "402": 13, "002": [13, 15], "373": 13, "198": 13, "055": 13, "903": 13, "797": 13, "110": [13, 15], "705": 13, "841": 13, "943": 13, "016": [13, 15], "376": 13, "190": 13, "124": 13, "447": 13, "715": 13, "591": 13, "605": 13, "229": 13, "959": 13, "893": 13, "252": 13, "778": [13, 15], "497": 13, "503": 13, "410": [13, 15], "826": 13, "034": 13, "748": 13, "444": [13, 15], "535": 13, "902": [13, 15], "204": 13, "025": 13, "141": 13, "274": 13, "472": 13, "479": 13, "526": [13, 15], "152": 13, "590": 13, "796": [13, 15], "425": 13, "677": 13, "315": 13, "430": [13, 15], "948": 13, "332": 13, "703": 13, "056": [13, 15], "756": [13, 15], "094": [13, 15], "323": 13, "468": [13, 15], "578": [13, 15], "584": 13, "485": 13, "650": 13, "525": 13, "182": 13, "040": [13, 15], "348": 13, "256": [13, 15], "998": [13, 15], "406": [13, 15], "230": 13, "966": 13, "006": [13, 15], "086": 13, "417": 13, "471": 13, "755": 13, "400": [13, 15], "171": 13, "321": 13, "671": 13, "612": [13, 15], "177": [13, 15], "696": 13, "618": [13, 15], "938": 13, "941": 13, "254": 13, "423": 13, "475": 13, "083": 13, "017": 13, "563": 13, "568": [13, 15], "833": 13, "947": 13, "235": 13, "594": [13, 15], "949": 13, "985": 13, "496": [13, 15], "033": 13, "781": 13, "995": 13, "942": 13, "522": [13, 15], "401": 13, "082": 13, "992": 13, "861": 13, "012": 13, "682": [13, 15], "151": 13, "56": [13, 15], "611": 13, "986": [13, 15], "58": [13, 15], "579": 13, "268": 13, "647": 13, "952": 13, "894": 13, "523": 13, "420": [13, 15], "070": [13, 15], "397": 13, "077": 13, "245": 13, "084": 13, "160": [13, 15], "264": [13, 15], "368": [13, 15], "048": 13, "729": 13, "064": [13, 15], "538": 13, "241": 13, "782": [13, 15], "286": [13, 15], "870": [13, 15], "872": [13, 15], "936": [13, 15], "580": [13, 15], "758": 13, "866": [13, 15], "059": 13, "087": 13, "77": [13, 15], "665": 13, "79": [13, 15], "82": [13, 15], "716": 13, "922": [13, 15], "85": [13, 15], "891": 13, "445": 13, "89": [13, 15], "019": 13, "837": 13, "474": [13, 15], "117": 13, "880": 13, "879": 13, "933": 13, "637": 13, "642": [13, 15], "822": [13, 15], "378": 13, "370": 13, "042": 13, "329": 13, "514": [13, 15], "524": 13, "010": [13, 15], "760": [13, 15], "140": 13, "492": [13, 15], "724": 13, "166": 13, "615": 13, "629": 13, "260": [13, 15], "652": 13, "889": 13, "747": 13, "868": 13, "871": 13, "976": 13, "901": 13, "381": 13, "226": 13, "925": 13, "240": 13, "350": [13, 15, 16], "989": 13, "231": 13, "649": 13, "596": 13, "372": 13, "195": 13, "136": 13, "129": 13, "283": 13, "280": [13, 15], "250": [13, 15], "907": 13, "780": 13, "253": 13, "554": 13, "207": 13, "222": 13, "409": 13, "258": 13, "098": 13, "148": [13, 15], "303": 13, "634": 13, "221": 13, "946": [13, 15], "575": 13, "873": 13, "48": 13, "267": 13, "122": [13, 15], "49": [13, 15], "801": 13, "191": 13, "51": 13, "382": 13, "623": 13, "53": [13, 15], "208": 13, "310": [13, 15], "216": [13, 15], "777": 13, "255": 13, "187": 13, "333": 13, "659": 13, "658": [13, 15], "352": [13, 15], "197": 13, "562": [13, 15], "632": [13, 15], "670": [13, 15], "128": [13, 15], "798": [13, 15], "543": 13, "890": 13, "015": 13, "And": 13, "size": 13, "1500x2100": 13, "also": 13, "possibl": 13, "let": 13, "focu": 13, "few": 13, "sake": 13, "1500x300": 13, "chosen": 13, "thei": 13, "44it": 13, "03it": 13, "been": 13, "while": [13, 15, 17], "desir": 13, "rate": [13, 18], "often": [13, 17], "more": [13, 17], "conveni": 13, "simpli": 13, "wa": [13, 15], "ad": [13, 15], "purpos": 13, "either": 13, "new": 13, "one": [13, 15], "dictionari": 13, "where": [13, 15], "boost": 13, "_": 13, "rang": 13, "8e10": 13, "again": 13, "everyth": 13, "68it": 13, "47it": 13, "sinc": 13, "we": 13, "earlier": 13, "did": 13, "deepcopi": 13, "still": 13, "separ": 13, "script": [13, 15], "minut": [13, 15], "ipynb": [13, 15], "galleri": [13, 14, 15], "sphinx": [13, 14, 15], "below": 14, "finstmt": [14, 15, 16], "manipul": [14, 16], "auto_examples_python": 14, "zip": 14, "auto_examples_jupyt": 14, "first": 15, "info": 15, "abl": 15, "follow": 15, "margin": 15, "ep": 15, "dividend": 15, "per": 15, "ebitda": 15, "com": 15, "prefer": 15, "basic": 15, "discontinu": 15, "weight": 15, "consolid": 15, "dilut": 15, "control": 15, "them": 15, "notic": 15, "matter": 15, "valid": 15, "If": 15, "appli": 15, "anoth": 15, "two": 15, "easi": 15, "divid": 15, "1000000": 15, "million": 15, "done": 15, "pair": 15, "aggreg": 15, "subsidiari": 15, "segment": 15, "etc": 15, "792": 15, "176": 15, "276": 15, "131": 15, "111": 15, "312": 15, "94": 15, "022": 15, "90": 15, "924": 15, "109": 15, "862": 15, "62": 15, "808": 15, "95": 15, "908": 15, "68": 15, "812": 15, "75": 15, "794": 15, "112": 15, "932": 15, "092": 15, "238": 15, "706": 15, "290": 15, "838": 15, "058": 15, "956": 15, "776": 15, "688": 15, "470": 15, "498": 15, "686": 15, "934": 15, "062": 15, "336": 15, "296": 15, "288": 15, "690": 15, "540": 15, "440": 15, "678": 15, "362": 15, "904": 15, "024": 15, "134": 15, "294": 15, "980": 15, "714": 15, "324": 15, "606": 15, "66": 15, "174": 15, "228": 15, "036": 15, "434": 15, "620": 15, "800": 15, "72": 15, "206": 15, "078": 15, "150": 15, "154": 15, "644": 15, "104": 15, "622": 15, "860": 15, "848": 15, "116": 15, "86": 15, "636": 15, "93": 15, "664": 15, "91": 15, "076": 15, "940": 15, "156": 15, "149": 15, "408": 15, "157": 15, "506": 15, "030": 15, "974": 15, "102": 15, "106": 15, "830": 15, "694": 15, "874": 15, "504": 15, "262": 15, "836": 15, "69": 15, "570": 15, "026": 15, "73": 15, "566": 15, "662": 15, "292": 15, "486": 15, "918": 15, "83": 15, "442": 15, "70": 15, "530": 15, "422": 15, "101": 15, "476": 15, "390": 15, "135": 15, "142": 15, "126": 15, "914": 15, "982": 15, "392": 15, "858": 15, "768": 15, "708": 15, "774": 15, "602": 15, "480": 15, "127": 15, "398": 15, "840": 15, "differ": 15, "put": 15, "both": 15, "veri": 15, "case": 15, "someth": 15, "requir": 15, "dropna": 15, "40it": 15, "92it": 15, "394863e": 15, "09": 15, "646065e": 15, "07": 15, "dtype": 15, "float64": 15, "second": 15, "manipulating_stat": [15, 16], "01": 16, "807": 16, "execut": 16, "auto_exampl": 16, "file": 16, "mb": 16, "instal": 17, "pip": [17, 18], "simpl": [17, 18], "see": [17, 18], "depth": 17, "earli": 17, "stage": 17, "There": 17, "mai": 17, "break": 17, "major": 17, "version": 17, "upgrad": 17, "guid": 17, "detail": 17, "creat": 17, "nick": 17, "deroberti": 17, "mit": 17, "licens": 17, "inform": 17, "take": 17, "usag": 17, "find": 17, "github": 17, "search": 17, "page": 17, "avail": 18, "linear": 18, "regress": 18, "compound": 18, "grow": 18, "futur": 18, "most": 18}, "objects": {"": [[0, 0, 0, "-", "finstmt"]], "finstmt": [[1, 0, 0, "-", "bs"], [0, 0, 0, "-", "check"], [2, 0, 0, "-", "clean"], [3, 0, 0, "-", "combined"], [4, 0, 0, "-", "config_manage"], [0, 0, 0, "-", "exc"], [5, 0, 0, "-", "findata"], [6, 0, 0, "-", "forecast"], [8, 0, 0, "-", "inc"], [9, 0, 0, "-", "items"], [10, 0, 0, "-", "loaders"], [0, 0, 0, "-", "logger"], [11, 0, 0, "-", "resolver"]], "finstmt.bs": [[1, 0, 0, "-", "config"], [1, 0, 0, "-", "data"], [1, 0, 0, "-", "main"]], "finstmt.bs.data": [[1, 1, 1, "", "BalanceSheetData"]], "finstmt.bs.data.BalanceSheetData": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "cash"], [1, 3, 1, "", "cash_and_st_invest"], [1, 3, 1, "", "common_stock"], [1, 3, 1, "", "current_lt_debt"], [1, 3, 1, "", "def_tax_lt"], [1, 3, 1, "", "def_tax_st"], [1, 3, 1, "", "deferred_rev"], [1, 3, 1, "", "dep"], [1, 3, 1, "", "deposit_liab"], [1, 3, 1, "", "goodwill"], [1, 3, 1, "", "gross_ppe"], [1, 3, 1, "", "inventory"], [1, 3, 1, "", "items_config"], [1, 3, 1, "", "lt_debt"], [1, 3, 1, "", "lt_invest"], [1, 3, 1, "", "minority_interest"], [1, 3, 1, "", "net_ppe"], [1, 4, 1, "", "nwc"], [1, 3, 1, "", "other_current_assets"], [1, 3, 1, "", "other_current_liab"], [1, 3, 1, "", "other_income"], [1, 3, 1, "", "other_lt_assets"], [1, 3, 1, "", "other_lt_liab"], [1, 3, 1, "", "payables"], [1, 3, 1, "", "receivables"], [1, 3, 1, "", "retained_earnings"], [1, 3, 1, "", "st_debt"], [1, 3, 1, "", "st_invest"], [1, 3, 1, "", "tax_liab_lt"], [1, 3, 1, "", "tax_liab_st"], [1, 3, 1, "", "total_assets"], [1, 3, 1, "", "total_current_assets"], [1, 3, 1, "", "total_current_liab"], [1, 3, 1, "", "total_debt"], [1, 3, 1, "", "total_equity"], [1, 3, 1, "", "total_liab"], [1, 3, 1, "", "total_liab_and_equity"], [1, 3, 1, "", "total_non_current_assets"], [1, 3, 1, "", "total_non_current_liab"]], "finstmt.bs.main": [[1, 1, 1, "", "BalanceSheets"]], "finstmt.bs.main.BalanceSheets": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "statement_cls"], [1, 3, 1, "", "statement_name"], [1, 3, 1, "", "statements"]], "finstmt.check": [[0, 5, 1, "", "item_series_is_empty"]], "finstmt.clean": [[2, 0, 0, "-", "name"]], "finstmt.clean.name": [[2, 5, 1, "", "standardize_name_for_look_up"], [2, 5, 1, "", "standardize_names_in_series_index"]], "finstmt.combined": [[3, 0, 0, "-", "statements"]], "finstmt.combined.statements": [[3, 1, 1, "", "FinancialStatements"]], "finstmt.combined.statements.FinancialStatements": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "all_config_items"], [3, 3, 1, "", "auto_adjust_config"], [3, 3, 1, "", "balance_sheets"], [3, 3, 1, "", "calculate"], [3, 4, 1, "", "capex"], [3, 2, 1, "", "change"], [3, 2, 1, "", "copy"], [3, 4, 1, "", "dates"], [3, 4, 1, "", "fcf"], [3, 2, 1, "", "forecast"], [3, 4, 1, "", "forecast_assumptions"], [3, 3, 1, "", "income_statements"], [3, 2, 1, "", "item_is_empty"], [3, 2, 1, "", "lag"], [3, 4, 1, "", "non_cash_expenses"]], "finstmt.combined.statements.FinancialStatements.change.params": [[3, 6, 1, "", "data_key"]], "finstmt.combined.statements.FinancialStatements.forecast.params": [[3, 6, 1, "", "kwargs"]], "finstmt.combined.statements.FinancialStatements.item_is_empty.params": [[3, 6, 1, "", "data_key"]], "finstmt.combined.statements.FinancialStatements.lag.params": [[3, 6, 1, "", "data_key"], [3, 6, 1, "", "num_lags"]], "finstmt.combined.statements.FinancialStatements.params": [[17, 6, 1, "", "auto_adjust_config"]], "finstmt.config_manage": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "data"], [4, 0, 0, "-", "global_"], [4, 0, 0, "-", "statement"], [4, 0, 0, "-", "statements"]], "finstmt.config_manage.base": [[4, 1, 1, "", "ConfigManagerBase"]], "finstmt.config_manage.base.ConfigManagerBase": [[4, 4, 1, "", "balance_groups"], [4, 2, 1, "", "eq_subs_dict"], [4, 2, 1, "", "eqs_involving"], [4, 2, 1, "", "expr_for"], [4, 2, 1, "", "get"], [4, 2, 1, "", "get_value"], [4, 2, 1, "", "item_determinant_keys"], [4, 4, 1, "", "items"], [4, 2, 1, "", "set"], [4, 2, 1, "", "set_value"], [4, 4, 1, "", "sympy_namespace"]], "finstmt.config_manage.data": [[4, 1, 1, "", "DataConfigManager"]], "finstmt.config_manage.data.DataConfigManager": [[4, 2, 1, "", "__init__"], [4, 4, 1, "", "config_dict"], [4, 3, 1, "", "configs"], [4, 2, 1, "", "get"], [4, 4, 1, "", "items"], [4, 4, 1, "", "keys"], [4, 2, 1, "", "set"], [4, 4, 1, "", "sympy_namespace"]], "finstmt.config_manage.statement": [[4, 1, 1, "", "StatementConfigManager"]], "finstmt.config_manage.statement.StatementConfigManager": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "config_managers"], [4, 2, 1, "", "get"], [4, 4, 1, "", "items"], [4, 4, 1, "", "keys"], [4, 2, 1, "", "set"], [4, 4, 1, "", "sympy_namespace"]], "finstmt.config_manage.statements": [[4, 1, 1, "", "StatementsConfigManager"]], "finstmt.config_manage.statements.StatementsConfigManager": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "config_managers"], [4, 2, 1, "", "dict"], [4, 2, 1, "", "get"], [4, 4, 1, "", "items"], [4, 2, 1, "", "json"], [4, 4, 1, "", "keys"], [4, 2, 1, "", "set"], [4, 4, 1, "", "sympy_namespace"], [4, 2, 1, "", "update"], [4, 2, 1, "", "update_all"]], "finstmt.config_manage.statements.StatementsConfigManager.update.params": [[4, 6, 1, "", "config_keys"], [4, 6, 1, "", "item_key"], [4, 6, 1, "", "value"]], "finstmt.config_manage.statements.StatementsConfigManager.update_all.params": [[4, 6, 1, "", "config_keys"], [4, 6, 1, "", "value"]], "finstmt.exc": [[0, 7, 1, "", "BalanceSheetNotBalancedException"], [0, 7, 1, "", "CouldNotParseException"], [0, 7, 1, "", "FinstmtException"], [0, 7, 1, "", "ForecastException"], [0, 7, 1, "", "ForecastNotFitException"], [0, 7, 1, "", "ForecastNotPredictedException"], [0, 7, 1, "", "ImproperManualForecastException"], [0, 7, 1, "", "InvalidBalanceConfigException"], [0, 7, 1, "", "InvalidBalancePlugsException"], [0, 7, 1, "", "InvalidForecastEquationException"], [0, 7, 1, "", "MismatchingDatesException"], [0, 7, 1, "", "MissingDataException"], [0, 7, 1, "", "MixedFrequencyException"], [0, 7, 1, "", "NoSuchItemException"], [0, 7, 1, "", "NotACalculatedItemException"]], "finstmt.findata": [[5, 0, 0, "-", "database"], [5, 0, 0, "-", "statementsbase"]], "finstmt.findata.database": [[5, 1, 1, "", "FinDataBase"]], "finstmt.findata.database.FinDataBase": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "as_dict"], [5, 2, 1, "", "from_series"], [5, 2, 1, "", "get_sympy_subs_dict"], [5, 3, 1, "", "items_config"], [5, 3, 1, "", "prior_statement"], [5, 2, 1, "", "to_series"], [5, 3, 1, "", "unextracted_names"]], "finstmt.findata.statementsbase": [[5, 1, 1, "", "FinStatementsBase"], [5, 5, 1, "", "combine_statement_dfs"]], "finstmt.findata.statementsbase.FinStatementsBase": [[5, 2, 1, "", "__init__"], [5, 4, 1, "", "dates"], [5, 4, 1, "", "freq"], [5, 2, 1, "", "from_df"], [5, 2, 1, "", "item_is_empty"], [5, 3, 1, "", "statement_cls"], [5, 3, 1, "", "statement_name"], [5, 3, 1, "", "statements"], [5, 2, 1, "", "to_df"]], "finstmt.forecast": [[6, 0, 0, "-", "config"], [6, 0, 0, "-", "dataframe"], [6, 0, 0, "-", "main"], [7, 0, 0, "-", "models"], [6, 0, 0, "-", "plot"], [6, 0, 0, "-", "statements"]], "finstmt.forecast.config": [[6, 1, 1, "", "ForecastConfig"], [6, 1, 1, "", "ForecastItemConfig"]], "finstmt.forecast.config.ForecastConfig": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "balance"], [6, 3, 1, "", "bs_diff_max"], [6, 3, 1, "", "freq"], [6, 4, 1, "", "make_future_df_kwargs"], [6, 3, 1, "", "periods"], [6, 3, 1, "", "prophet_kwargs"], [6, 3, 1, "", "timeout"]], "finstmt.forecast.config.ForecastItemConfig": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "balance_with"], [6, 3, 1, "", "cap"], [6, 3, 1, "", "floor"], [6, 3, 1, "", "make_forecast"], [6, 3, 1, "", "manual_forecasts"], [6, 3, 1, "", "method"], [6, 3, 1, "", "pct_of"], [6, 3, 1, "", "plug"], [6, 3, 1, "", "prophet_kwargs"], [6, 2, 1, "", "to_series"]], "finstmt.forecast.dataframe": [[6, 5, 1, "", "add_cap_and_floor_to_df"]], "finstmt.forecast.main": [[6, 1, 1, "", "Forecast"]], "finstmt.forecast.main.Forecast": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "fit"], [6, 3, 1, "", "model"], [6, 4, 1, "", "name"], [6, 2, 1, "", "plot"], [6, 2, 1, "", "predict"], [6, 4, 1, "", "result"], [6, 4, 1, "", "series"], [6, 2, 1, "", "to_manual"]], "finstmt.forecast.models": [[7, 0, 0, "-", "average"], [7, 0, 0, "-", "base"], [7, 0, 0, "-", "cagr"], [7, 0, 0, "-", "chooser"], [7, 0, 0, "-", "manual"], [7, 0, 0, "-", "prophet"], [7, 0, 0, "-", "recent"], [7, 0, 0, "-", "trend"]], "finstmt.forecast.models.average": [[7, 1, 1, "", "AverageModel"]], "finstmt.forecast.models.average.AverageModel": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "mean"], [7, 2, 1, "", "predict"], [7, 3, 1, "", "stderr"]], "finstmt.forecast.models.base": [[7, 1, 1, "", "ForecastModel"], [7, 5, 1, "", "compare_freq_strs"]], "finstmt.forecast.models.base.ForecastModel": [[7, 2, 1, "", "__init__"], [7, 4, 1, "", "desired_freq_t_multiplier"], [7, 2, 1, "", "fit"], [7, 4, 1, "", "historical_freq"], [7, 3, 1, "", "last_historical_period"], [7, 3, 1, "", "orig_series"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "predict"], [7, 3, 1, "", "result"], [7, 3, 1, "", "result_df"]], "finstmt.forecast.models.cagr": [[7, 1, 1, "", "CAGRModel"]], "finstmt.forecast.models.cagr.CAGRModel": [[7, 3, 1, "", "cagr"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "last_value"], [7, 2, 1, "", "predict"], [7, 3, 1, "", "stderr"]], "finstmt.forecast.models.chooser": [[7, 5, 1, "", "get_model"]], "finstmt.forecast.models.manual": [[7, 1, 1, "", "ManualForecastModel"]], "finstmt.forecast.models.manual.ManualForecastModel": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "predict"], [7, 3, 1, "", "recent"]], "finstmt.forecast.models.prophet": [[7, 1, 1, "", "FBProphetModel"]], "finstmt.forecast.models.prophet.FBProphetModel": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "predict"]], "finstmt.forecast.models.recent": [[7, 1, 1, "", "RecentValueModel"]], "finstmt.forecast.models.recent.RecentValueModel": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "predict"], [7, 3, 1, "", "recent"]], "finstmt.forecast.models.trend": [[7, 1, 1, "", "LinearTrendModel"]], "finstmt.forecast.models.trend.LinearTrendModel": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "model"], [7, 3, 1, "", "model_result"], [7, 2, 1, "", "predict"]], "finstmt.forecast.plot": [[6, 5, 1, "", "plot_forecast"]], "finstmt.forecast.statements": [[6, 1, 1, "", "ForecastedFinancialStatements"]], "finstmt.forecast.statements.ForecastedFinancialStatements": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "forecasts"], [6, 2, 1, "", "plot"]], "finstmt.inc": [[8, 0, 0, "-", "config"], [8, 0, 0, "-", "data"], [8, 0, 0, "-", "main"]], "finstmt.inc.data": [[8, 1, 1, "", "IncomeStatementData"]], "finstmt.inc.data.IncomeStatementData": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "cogs"], [8, 3, 1, "", "dep_exp"], [8, 3, 1, "", "ebit"], [8, 3, 1, "", "ebt"], [8, 4, 1, "", "effective_tax_rate"], [8, 3, 1, "", "gain_on_sale_asset"], [8, 3, 1, "", "gain_on_sale_invest"], [8, 4, 1, "", "gross_profit"], [8, 3, 1, "", "impairment"], [8, 3, 1, "", "int_exp"], [8, 3, 1, "", "items_config"], [8, 3, 1, "", "net_income"], [8, 3, 1, "", "op_exp"], [8, 3, 1, "", "other_op_exp"], [8, 3, 1, "", "rd_exp"], [8, 3, 1, "", "revenue"], [8, 3, 1, "", "sga"], [8, 3, 1, "", "tax_exp"]], "finstmt.inc.main": [[8, 1, 1, "", "IncomeStatements"]], "finstmt.inc.main.IncomeStatements": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "statement_cls"], [8, 3, 1, "", "statement_name"], [8, 3, 1, "", "statements"]], "finstmt.items": [[9, 0, 0, "-", "config"]], "finstmt.items.config": [[9, 1, 1, "", "ItemConfig"]], "finstmt.items.config.ItemConfig": [[9, 1, 1, "", "Config"], [9, 2, 1, "", "__init__"], [9, 3, 1, "", "display_name"], [9, 3, 1, "", "expr_str"], [9, 3, 1, "", "extract_names"], [9, 3, 1, "", "force_positive"], [9, 3, 1, "", "forecast_config"], [9, 3, 1, "", "key"], [9, 4, 1, "", "primary_name"]], "finstmt.items.config.ItemConfig.Config": [[9, 3, 1, "", "arbitrary_types_allowed"]], "finstmt.loaders": [[10, 0, 0, "-", "capiq"]], "finstmt.loaders.capiq": [[10, 5, 1, "", "load_capiq_df"]], "finstmt.resolver": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "forecast"], [11, 0, 0, "-", "history"], [11, 0, 0, "-", "solve"]], "finstmt.resolver.base": [[11, 1, 1, "", "ResolverBase"]], "finstmt.resolver.base.ResolverBase": [[11, 2, 1, "", "__init__"], [11, 4, 1, "", "all_eqs"], [11, 4, 1, "", "num_periods"], [11, 2, 1, "", "set_solve_eqs_and_full_subs_dict"], [11, 3, 1, "", "solve_eqs"], [11, 3, 1, "", "subs_dict"], [11, 4, 1, "", "sympy_subs_dict"], [11, 4, 1, "", "t"], [11, 4, 1, "", "t_indexed_eqs"], [11, 2, 1, "", "to_statements"]], "finstmt.resolver.forecast": [[11, 7, 1, "", "BalanceSheetBalancedException"], [11, 1, 1, "", "ForecastResolver"], [11, 1, 1, "", "PlugResult"], [11, 5, 1, "", "resolve_balance_sheet"]], "finstmt.resolver.forecast.ForecastResolver": [[11, 2, 1, "", "__init__"], [11, 4, 1, "", "all_eqs"], [11, 4, 1, "", "bs_balance_eqs"], [11, 4, 1, "", "forecast_dates"], [11, 4, 1, "", "num_periods"], [11, 4, 1, "", "plug_configs"], [11, 4, 1, "", "plug_keys"], [11, 4, 1, "", "plug_x0"], [11, 2, 1, "", "resolve_balance_sheet"], [11, 3, 1, "", "solve_eqs"], [11, 3, 1, "", "subs_dict"], [11, 4, 1, "", "sympy_subs_dict"], [11, 4, 1, "", "t_indexed_eqs"], [11, 2, 1, "", "to_statements"]], "finstmt.resolver.forecast.PlugResult": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "fun"], [11, 4, 1, "", "is_timed_out"], [11, 3, 1, "", "met_goal"], [11, 3, 1, "", "res"], [11, 3, 1, "", "start_time"], [11, 4, 1, "", "time_elapsed"], [11, 3, 1, "", "timeout"]], "finstmt.resolver.history": [[11, 1, 1, "", "StatementsResolver"]], "finstmt.resolver.history.StatementsResolver": [[11, 4, 1, "", "all_eqs"], [11, 4, 1, "", "num_periods"], [11, 3, 1, "", "solve_eqs"], [11, 3, 1, "", "subs_dict"], [11, 4, 1, "", "sympy_subs_dict"], [11, 4, 1, "", "t_indexed_eqs"], [11, 2, 1, "", "to_statements"]], "finstmt.resolver.solve": [[11, 5, 1, "", "get_solve_eqs_and_full_subs_dict"], [11, 5, 1, "", "numpy_solve"], [11, 5, 1, "", "results_dict_to_sympy_dict"], [11, 5, 1, "", "solve_equations"], [11, 5, 1, "", "sympy_dict_to_results_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:parameter", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"finstmt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": [0, 6], "submodul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "check": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "exc": 0, "logger": 0, "b": 1, "config": [1, 6, 8, 9], "data": [1, 4, 8], "main": [1, 6, 8], "clean": 2, "name": 2, "combin": [3, 15], "statement": [3, 4, 6, 13, 15], "config_manag": 4, "base": [4, 7, 11], "global_": 4, "findata": 5, "databas": 5, "statementsbas": 5, "forecast": [6, 7, 11, 13, 18], "datafram": 6, "plot": 6, "model": 7, "averag": 7, "cagr": 7, "chooser": 7, "manual": 7, "prophet": 7, "recent": 7, "trend": 7, "inc": 8, "item": 9, "loader": 10, "capiq": 10, "resolv": 11, "histori": 11, "solv": 11, "financi": [13, 15], "load": [13, 15], "view": [13, 15], "exist": 13, "copi": 13, "run": 13, "set": 13, "default": 13, "method": 13, "assumpt": 13, "first": 13, "chang": 13, "re": 13, "adjust": [13, 15], "an": [13, 17], "A": 13, "second": 13, "exampl": 14, "manipul": 15, "select": 15, "period": 15, "math": 15, "unit": 15, "overlap": 15, "non": 15, "comput": 16, "time": 16, "welcom": 17, "document": 17, "py": 17, "overview": 17, "get": [17, 18], "start": [17, 18], "link": 17, "develop": 17, "statu": 17, "author": 17, "tutori": 17, "quick": 17, "api": 17, "indic": 17, "tabl": 17, "instal": 18, "usag": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Forecasting Financial Statements with finstmt": [[13, "forecasting-financial-statements-with-finstmt"]], "Load Financial Statements": [[13, "load-financial-statements"], [15, "load-financial-statements"]], "View Existing Statements": [[13, "view-existing-statements"]], "Copy the Statements": [[13, "copy-the-statements"]], "Run a Forecast": [[13, "run-a-forecast"]], "Set the Default Method": [[13, "set-the-default-method"]], "View the Forecast Assumptions": [[13, "view-the-forecast-assumptions"]], "Run the First Forecast": [[13, "run-the-first-forecast"]], "Change Methods and Re-Run Forecast": [[13, "change-methods-and-re-run-forecast"]], "Adjusting an Existing Forecast": [[13, "adjusting-an-existing-forecast"]], "A Second Forecast": [[13, "a-second-forecast"]], "Examples": [[14, "examples"]], "Manipulating Statements": [[15, "manipulating-statements"]], "View Statements": [[15, "view-statements"]], "Select Statement Periods": [[15, "select-statement-periods"]], "Statement Math": [[15, "statement-math"]], "Adjust Units": [[15, "adjust-units"]], "Math with Overlapping Statements": [[15, "math-with-overlapping-statements"]], "Combine Non-Overlapping Statements": [[15, "combine-non-overlapping-statements"]], "Computation times": [[16, "computation-times"]], "Getting started with finstmt": [[18, "getting-started-with-finstmt"]], "Install": [[18, "install"]], "Usage": [[18, "usage"]], "Forecasting": [[18, "forecasting"]], "finstmt package": [[0, "module-finstmt"]], "Subpackages": [[0, "subpackages"], [6, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "finstmt.check module": [[0, "module-finstmt.check"]], "finstmt.exc module": [[0, "module-finstmt.exc"]], "finstmt.logger module": [[0, "module-finstmt.logger"]], "finstmt.bs package": [[1, "module-finstmt.bs"]], "finstmt.bs.config module": [[1, "module-finstmt.bs.config"]], "finstmt.bs.data module": [[1, "module-finstmt.bs.data"]], "finstmt.bs.main module": [[1, "module-finstmt.bs.main"]], "finstmt.clean package": [[2, "module-finstmt.clean"]], "finstmt.clean.name module": [[2, "module-finstmt.clean.name"]], "finstmt.combined package": [[3, "module-finstmt.combined"]], "finstmt.combined.statements module": [[3, "module-finstmt.combined.statements"]], "finstmt.config_manage package": [[4, "module-finstmt.config_manage"]], "finstmt.config_manage.base module": [[4, "module-finstmt.config_manage.base"]], "finstmt.config_manage.data module": [[4, "module-finstmt.config_manage.data"]], "finstmt.config_manage.global_ module": [[4, "module-finstmt.config_manage.global_"]], "finstmt.config_manage.statement module": [[4, "module-finstmt.config_manage.statement"]], "finstmt.config_manage.statements module": [[4, "module-finstmt.config_manage.statements"]], "finstmt.findata package": [[5, "module-finstmt.findata"]], "finstmt.findata.database module": [[5, "module-finstmt.findata.database"]], "finstmt.findata.statementsbase module": [[5, "module-finstmt.findata.statementsbase"]], "finstmt.forecast package": [[6, "module-finstmt.forecast"]], "finstmt.forecast.config module": [[6, "module-finstmt.forecast.config"]], "finstmt.forecast.dataframe module": [[6, "module-finstmt.forecast.dataframe"]], "finstmt.forecast.main module": [[6, "module-finstmt.forecast.main"]], "finstmt.forecast.plot module": [[6, "module-finstmt.forecast.plot"]], "finstmt.forecast.statements module": [[6, "module-finstmt.forecast.statements"]], "finstmt.forecast.models package": [[7, "module-finstmt.forecast.models"]], "finstmt.forecast.models.average module": [[7, "module-finstmt.forecast.models.average"]], "finstmt.forecast.models.base module": [[7, "module-finstmt.forecast.models.base"]], "finstmt.forecast.models.cagr module": [[7, "module-finstmt.forecast.models.cagr"]], "finstmt.forecast.models.chooser module": [[7, "module-finstmt.forecast.models.chooser"]], "finstmt.forecast.models.manual module": [[7, "module-finstmt.forecast.models.manual"]], "finstmt.forecast.models.prophet module": [[7, "module-finstmt.forecast.models.prophet"]], "finstmt.forecast.models.recent module": [[7, "module-finstmt.forecast.models.recent"]], "finstmt.forecast.models.trend module": [[7, "module-finstmt.forecast.models.trend"]], "finstmt.inc package": [[8, "module-finstmt.inc"]], "finstmt.inc.config module": [[8, "module-finstmt.inc.config"]], "finstmt.inc.data module": [[8, "module-finstmt.inc.data"]], "finstmt.inc.main module": [[8, "module-finstmt.inc.main"]], "finstmt.items package": [[9, "module-finstmt.items"]], "finstmt.items.config module": [[9, "module-finstmt.items.config"]], "finstmt.loaders package": [[10, "module-finstmt.loaders"]], "finstmt.loaders.capiq module": [[10, "module-finstmt.loaders.capiq"]], "finstmt.resolver package": [[11, "module-finstmt.resolver"]], "finstmt.resolver.base module": [[11, "module-finstmt.resolver.base"]], "finstmt.resolver.forecast module": [[11, "module-finstmt.resolver.forecast"]], "finstmt.resolver.history module": [[11, "module-finstmt.resolver.history"]], "finstmt.resolver.solve module": [[11, "module-finstmt.resolver.solve"]], "finstmt": [[12, "finstmt"]], "Welcome to finstmt documentation!": [[17, "welcome-to-finstmt-documentation"]], "py-finstmt": [[17, "py-finstmt"]], "Overview": [[17, "overview"]], "Getting Started": [[17, "getting-started"]], "Links": [[17, "links"]], "Development Status": [[17, "development-status"]], "Developing": [[17, "developing"]], "Author": [[17, "author"]], "Tutorial": [[17, null]], "An overview": [[17, "an-overview"]], "Quick Links": [[17, "quick-links"]], "API Documentation": [[17, "api-documentation"]], "Indices and tables": [[17, "indices-and-tables"]]}, "indexentries": {"balancesheetnotbalancedexception": [[0, "finstmt.exc.BalanceSheetNotBalancedException"]], "couldnotparseexception": [[0, "finstmt.exc.CouldNotParseException"]], "finstmtexception": [[0, "finstmt.exc.FinstmtException"]], "forecastexception": [[0, "finstmt.exc.ForecastException"]], "forecastnotfitexception": [[0, "finstmt.exc.ForecastNotFitException"]], "forecastnotpredictedexception": [[0, "finstmt.exc.ForecastNotPredictedException"]], "impropermanualforecastexception": [[0, "finstmt.exc.ImproperManualForecastException"]], "invalidbalanceconfigexception": [[0, "finstmt.exc.InvalidBalanceConfigException"]], "invalidbalanceplugsexception": [[0, "finstmt.exc.InvalidBalancePlugsException"]], "invalidforecastequationexception": [[0, "finstmt.exc.InvalidForecastEquationException"]], "mismatchingdatesexception": [[0, "finstmt.exc.MismatchingDatesException"]], "missingdataexception": [[0, "finstmt.exc.MissingDataException"]], "mixedfrequencyexception": [[0, "finstmt.exc.MixedFrequencyException"]], "nosuchitemexception": [[0, "finstmt.exc.NoSuchItemException"]], "notacalculateditemexception": [[0, "finstmt.exc.NotACalculatedItemException"]], "finstmt": [[0, "module-finstmt"]], "finstmt.check": [[0, "module-finstmt.check"]], "finstmt.exc": [[0, "module-finstmt.exc"]], "finstmt.logger": [[0, "module-finstmt.logger"]], "item_series_is_empty() (in module finstmt.check)": [[0, "finstmt.check.item_series_is_empty"]], "module": [[0, "module-finstmt"], [0, "module-finstmt.check"], [0, "module-finstmt.exc"], [0, "module-finstmt.logger"], [1, "module-finstmt.bs"], [1, "module-finstmt.bs.config"], [1, "module-finstmt.bs.data"], [1, "module-finstmt.bs.main"], [2, "module-finstmt.clean"], [2, "module-finstmt.clean.name"], [3, "module-finstmt.combined"], [3, "module-finstmt.combined.statements"], [4, "module-finstmt.config_manage"], [4, "module-finstmt.config_manage.base"], [4, "module-finstmt.config_manage.data"], [4, "module-finstmt.config_manage.global_"], [4, "module-finstmt.config_manage.statement"], [4, "module-finstmt.config_manage.statements"], [5, "module-finstmt.findata"], [5, "module-finstmt.findata.database"], [5, "module-finstmt.findata.statementsbase"], [6, "module-finstmt.forecast"], [6, "module-finstmt.forecast.config"], [6, "module-finstmt.forecast.dataframe"], [6, "module-finstmt.forecast.main"], [6, "module-finstmt.forecast.plot"], [6, "module-finstmt.forecast.statements"], [7, "module-finstmt.forecast.models"], [7, "module-finstmt.forecast.models.average"], [7, "module-finstmt.forecast.models.base"], [7, "module-finstmt.forecast.models.cagr"], [7, "module-finstmt.forecast.models.chooser"], [7, "module-finstmt.forecast.models.manual"], [7, "module-finstmt.forecast.models.prophet"], [7, "module-finstmt.forecast.models.recent"], [7, "module-finstmt.forecast.models.trend"], [8, "module-finstmt.inc"], [8, "module-finstmt.inc.config"], [8, "module-finstmt.inc.data"], [8, "module-finstmt.inc.main"], [9, "module-finstmt.items"], [9, "module-finstmt.items.config"], [10, "module-finstmt.loaders"], [10, "module-finstmt.loaders.capiq"], [11, "module-finstmt.resolver"], [11, "module-finstmt.resolver.base"], [11, "module-finstmt.resolver.forecast"], [11, "module-finstmt.resolver.history"], [11, "module-finstmt.resolver.solve"]], "balancesheetdata (class in finstmt.bs.data)": [[1, "finstmt.bs.data.BalanceSheetData"]], "balancesheets (class in finstmt.bs.main)": [[1, "finstmt.bs.main.BalanceSheets"]], "__init__() (finstmt.bs.data.balancesheetdata method)": [[1, "finstmt.bs.data.BalanceSheetData.__init__"]], "__init__() (finstmt.bs.main.balancesheets method)": [[1, "finstmt.bs.main.BalanceSheets.__init__"]], "cash (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.cash"]], "cash_and_st_invest (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.cash_and_st_invest"]], "common_stock (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.common_stock"]], "current_lt_debt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.current_lt_debt"]], "def_tax_lt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.def_tax_lt"]], "def_tax_st (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.def_tax_st"]], "deferred_rev (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.deferred_rev"]], "dep (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.dep"]], "deposit_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.deposit_liab"]], "finstmt.bs": [[1, "module-finstmt.bs"]], "finstmt.bs.config": [[1, "module-finstmt.bs.config"]], "finstmt.bs.data": [[1, "module-finstmt.bs.data"]], "finstmt.bs.main": [[1, "module-finstmt.bs.main"]], "goodwill (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.goodwill"]], "gross_ppe (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.gross_ppe"]], "inventory (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.inventory"]], "items_config (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.items_config"]], "lt_debt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.lt_debt"]], "lt_invest (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.lt_invest"]], "minority_interest (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.minority_interest"]], "net_ppe (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.net_ppe"]], "nwc (finstmt.bs.data.balancesheetdata property)": [[1, "finstmt.bs.data.BalanceSheetData.nwc"]], "other_current_assets (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.other_current_assets"]], "other_current_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.other_current_liab"]], "other_income (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.other_income"]], "other_lt_assets (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.other_lt_assets"]], "other_lt_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.other_lt_liab"]], "payables (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.payables"]], "receivables (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.receivables"]], "retained_earnings (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.retained_earnings"]], "st_debt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.st_debt"]], "st_invest (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.st_invest"]], "statement_cls (finstmt.bs.main.balancesheets attribute)": [[1, "finstmt.bs.main.BalanceSheets.statement_cls"]], "statement_name (finstmt.bs.main.balancesheets attribute)": [[1, "finstmt.bs.main.BalanceSheets.statement_name"]], "statements (finstmt.bs.main.balancesheets attribute)": [[1, "finstmt.bs.main.BalanceSheets.statements"]], "tax_liab_lt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.tax_liab_lt"]], "tax_liab_st (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.tax_liab_st"]], "total_assets (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_assets"]], "total_current_assets (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_current_assets"]], "total_current_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_current_liab"]], "total_debt (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_debt"]], "total_equity (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_equity"]], "total_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_liab"]], "total_liab_and_equity (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_liab_and_equity"]], "total_non_current_assets (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_non_current_assets"]], "total_non_current_liab (finstmt.bs.data.balancesheetdata attribute)": [[1, "finstmt.bs.data.BalanceSheetData.total_non_current_liab"]], "finstmt.clean": [[2, "module-finstmt.clean"]], "finstmt.clean.name": [[2, "module-finstmt.clean.name"]], "standardize_name_for_look_up() (in module finstmt.clean.name)": [[2, "finstmt.clean.name.standardize_name_for_look_up"]], "standardize_names_in_series_index() (in module finstmt.clean.name)": [[2, "finstmt.clean.name.standardize_names_in_series_index"]], "financialstatements (class in finstmt.combined.statements)": [[3, "finstmt.combined.statements.FinancialStatements"]], "__init__() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.__init__"]], "all_config_items (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.all_config_items"]], "auto_adjust_config (finstmt.combined.statements.financialstatements attribute)": [[3, "finstmt.combined.statements.FinancialStatements.auto_adjust_config"]], "balance_sheets (finstmt.combined.statements.financialstatements attribute)": [[3, "finstmt.combined.statements.FinancialStatements.balance_sheets"]], "calculate (finstmt.combined.statements.financialstatements attribute)": [[3, "finstmt.combined.statements.FinancialStatements.calculate"]], "capex (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.capex"]], "change() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.change"]], "copy() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.copy"]], "dates (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.dates"]], "fcf (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.fcf"]], "finstmt.combined": [[3, "module-finstmt.combined"]], "finstmt.combined.statements": [[3, "module-finstmt.combined.statements"]], "forecast() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.forecast"]], "forecast_assumptions (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.forecast_assumptions"]], "income_statements (finstmt.combined.statements.financialstatements attribute)": [[3, "finstmt.combined.statements.FinancialStatements.income_statements"]], "item_is_empty() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.item_is_empty"]], "lag() (finstmt.combined.statements.financialstatements method)": [[3, "finstmt.combined.statements.FinancialStatements.lag"]], "non_cash_expenses (finstmt.combined.statements.financialstatements property)": [[3, "finstmt.combined.statements.FinancialStatements.non_cash_expenses"]], "configmanagerbase (class in finstmt.config_manage.base)": [[4, "finstmt.config_manage.base.ConfigManagerBase"]], "dataconfigmanager (class in finstmt.config_manage.data)": [[4, "finstmt.config_manage.data.DataConfigManager"]], "statementconfigmanager (class in finstmt.config_manage.statement)": [[4, "finstmt.config_manage.statement.StatementConfigManager"]], "statementsconfigmanager (class in finstmt.config_manage.statements)": [[4, "finstmt.config_manage.statements.StatementsConfigManager"]], "__init__() (finstmt.config_manage.data.dataconfigmanager method)": [[4, "finstmt.config_manage.data.DataConfigManager.__init__"]], "__init__() (finstmt.config_manage.statement.statementconfigmanager method)": [[4, "finstmt.config_manage.statement.StatementConfigManager.__init__"]], "__init__() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.__init__"]], "balance_groups (finstmt.config_manage.base.configmanagerbase property)": [[4, "finstmt.config_manage.base.ConfigManagerBase.balance_groups"]], "config_dict (finstmt.config_manage.data.dataconfigmanager property)": [[4, "finstmt.config_manage.data.DataConfigManager.config_dict"]], "config_managers (finstmt.config_manage.statement.statementconfigmanager attribute)": [[4, "finstmt.config_manage.statement.StatementConfigManager.config_managers"]], "config_managers (finstmt.config_manage.statements.statementsconfigmanager attribute)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.config_managers"]], "configs (finstmt.config_manage.data.dataconfigmanager attribute)": [[4, "finstmt.config_manage.data.DataConfigManager.configs"]], "dict() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.dict"]], "eq_subs_dict() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.eq_subs_dict"]], "eqs_involving() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.eqs_involving"]], "expr_for() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.expr_for"]], "finstmt.config_manage": [[4, "module-finstmt.config_manage"]], "finstmt.config_manage.base": [[4, "module-finstmt.config_manage.base"]], "finstmt.config_manage.data": [[4, "module-finstmt.config_manage.data"]], "finstmt.config_manage.global_": [[4, "module-finstmt.config_manage.global_"]], "finstmt.config_manage.statement": [[4, "module-finstmt.config_manage.statement"]], "finstmt.config_manage.statements": [[4, "module-finstmt.config_manage.statements"]], "get() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.get"]], "get() (finstmt.config_manage.data.dataconfigmanager method)": [[4, "finstmt.config_manage.data.DataConfigManager.get"]], "get() (finstmt.config_manage.statement.statementconfigmanager method)": [[4, "finstmt.config_manage.statement.StatementConfigManager.get"]], "get() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.get"]], "get_value() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.get_value"]], "item_determinant_keys() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.item_determinant_keys"]], "items (finstmt.config_manage.base.configmanagerbase property)": [[4, "finstmt.config_manage.base.ConfigManagerBase.items"]], "items (finstmt.config_manage.data.dataconfigmanager property)": [[4, "finstmt.config_manage.data.DataConfigManager.items"]], "items (finstmt.config_manage.statement.statementconfigmanager property)": [[4, "finstmt.config_manage.statement.StatementConfigManager.items"]], "items (finstmt.config_manage.statements.statementsconfigmanager property)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.items"]], "json() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.json"]], "keys (finstmt.config_manage.data.dataconfigmanager property)": [[4, "finstmt.config_manage.data.DataConfigManager.keys"]], "keys (finstmt.config_manage.statement.statementconfigmanager property)": [[4, "finstmt.config_manage.statement.StatementConfigManager.keys"]], "keys (finstmt.config_manage.statements.statementsconfigmanager property)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.keys"]], "set() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.set"]], "set() (finstmt.config_manage.data.dataconfigmanager method)": [[4, "finstmt.config_manage.data.DataConfigManager.set"]], "set() (finstmt.config_manage.statement.statementconfigmanager method)": [[4, "finstmt.config_manage.statement.StatementConfigManager.set"]], "set() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.set"]], "set_value() (finstmt.config_manage.base.configmanagerbase method)": [[4, "finstmt.config_manage.base.ConfigManagerBase.set_value"]], "sympy_namespace (finstmt.config_manage.base.configmanagerbase property)": [[4, "finstmt.config_manage.base.ConfigManagerBase.sympy_namespace"]], "sympy_namespace (finstmt.config_manage.data.dataconfigmanager property)": [[4, "finstmt.config_manage.data.DataConfigManager.sympy_namespace"]], "sympy_namespace (finstmt.config_manage.statement.statementconfigmanager property)": [[4, "finstmt.config_manage.statement.StatementConfigManager.sympy_namespace"]], "sympy_namespace (finstmt.config_manage.statements.statementsconfigmanager property)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.sympy_namespace"]], "update() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.update"]], "update_all() (finstmt.config_manage.statements.statementsconfigmanager method)": [[4, "finstmt.config_manage.statements.StatementsConfigManager.update_all"]], "findatabase (class in finstmt.findata.database)": [[5, "finstmt.findata.database.FinDataBase"]], "finstatementsbase (class in finstmt.findata.statementsbase)": [[5, "finstmt.findata.statementsbase.FinStatementsBase"]], "__init__() (finstmt.findata.database.findatabase method)": [[5, "finstmt.findata.database.FinDataBase.__init__"]], "__init__() (finstmt.findata.statementsbase.finstatementsbase method)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.__init__"]], "as_dict() (finstmt.findata.database.findatabase method)": [[5, "finstmt.findata.database.FinDataBase.as_dict"]], "combine_statement_dfs() (in module finstmt.findata.statementsbase)": [[5, "finstmt.findata.statementsbase.combine_statement_dfs"]], "dates (finstmt.findata.statementsbase.finstatementsbase property)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.dates"]], "finstmt.findata": [[5, "module-finstmt.findata"]], "finstmt.findata.database": [[5, "module-finstmt.findata.database"]], "finstmt.findata.statementsbase": [[5, "module-finstmt.findata.statementsbase"]], "freq (finstmt.findata.statementsbase.finstatementsbase property)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.freq"]], "from_df() (finstmt.findata.statementsbase.finstatementsbase class method)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.from_df"]], "from_series() (finstmt.findata.database.findatabase class method)": [[5, "finstmt.findata.database.FinDataBase.from_series"]], "get_sympy_subs_dict() (finstmt.findata.database.findatabase method)": [[5, "finstmt.findata.database.FinDataBase.get_sympy_subs_dict"]], "item_is_empty() (finstmt.findata.statementsbase.finstatementsbase method)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.item_is_empty"]], "items_config (finstmt.findata.database.findatabase attribute)": [[5, "finstmt.findata.database.FinDataBase.items_config"]], "prior_statement (finstmt.findata.database.findatabase attribute)": [[5, "finstmt.findata.database.FinDataBase.prior_statement"]], "statement_cls (finstmt.findata.statementsbase.finstatementsbase attribute)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.statement_cls"]], "statement_name (finstmt.findata.statementsbase.finstatementsbase attribute)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.statement_name"]], "statements (finstmt.findata.statementsbase.finstatementsbase attribute)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.statements"]], "to_df() (finstmt.findata.statementsbase.finstatementsbase method)": [[5, "finstmt.findata.statementsbase.FinStatementsBase.to_df"]], "to_series() (finstmt.findata.database.findatabase method)": [[5, "finstmt.findata.database.FinDataBase.to_series"]], "unextracted_names (finstmt.findata.database.findatabase attribute)": [[5, "finstmt.findata.database.FinDataBase.unextracted_names"]], "forecast (class in finstmt.forecast.main)": [[6, "finstmt.forecast.main.Forecast"]], "forecastconfig (class in finstmt.forecast.config)": [[6, "finstmt.forecast.config.ForecastConfig"]], "forecastitemconfig (class in finstmt.forecast.config)": [[6, "finstmt.forecast.config.ForecastItemConfig"]], "forecastedfinancialstatements (class in finstmt.forecast.statements)": [[6, "finstmt.forecast.statements.ForecastedFinancialStatements"]], "__init__() (finstmt.forecast.config.forecastconfig method)": [[6, "finstmt.forecast.config.ForecastConfig.__init__"]], "__init__() (finstmt.forecast.config.forecastitemconfig method)": [[6, "finstmt.forecast.config.ForecastItemConfig.__init__"]], "__init__() (finstmt.forecast.main.forecast method)": [[6, "finstmt.forecast.main.Forecast.__init__"]], "__init__() (finstmt.forecast.statements.forecastedfinancialstatements method)": [[6, "finstmt.forecast.statements.ForecastedFinancialStatements.__init__"]], "add_cap_and_floor_to_df() (in module finstmt.forecast.dataframe)": [[6, "finstmt.forecast.dataframe.add_cap_and_floor_to_df"]], "balance (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.balance"]], "balance_with (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.balance_with"]], "bs_diff_max (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.bs_diff_max"]], "cap (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.cap"]], "finstmt.forecast": [[6, "module-finstmt.forecast"]], "finstmt.forecast.config": [[6, "module-finstmt.forecast.config"]], "finstmt.forecast.dataframe": [[6, "module-finstmt.forecast.dataframe"]], "finstmt.forecast.main": [[6, "module-finstmt.forecast.main"]], "finstmt.forecast.plot": [[6, "module-finstmt.forecast.plot"]], "finstmt.forecast.statements": [[6, "module-finstmt.forecast.statements"]], "fit() (finstmt.forecast.main.forecast method)": [[6, "finstmt.forecast.main.Forecast.fit"]], "floor (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.floor"]], "forecasts (finstmt.forecast.statements.forecastedfinancialstatements attribute)": [[6, "finstmt.forecast.statements.ForecastedFinancialStatements.forecasts"]], "freq (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.freq"]], "make_forecast (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.make_forecast"]], "make_future_df_kwargs (finstmt.forecast.config.forecastconfig property)": [[6, "finstmt.forecast.config.ForecastConfig.make_future_df_kwargs"]], "manual_forecasts (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.manual_forecasts"]], "method (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.method"]], "model (finstmt.forecast.main.forecast attribute)": [[6, "finstmt.forecast.main.Forecast.model"]], "name (finstmt.forecast.main.forecast property)": [[6, "finstmt.forecast.main.Forecast.name"]], "pct_of (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.pct_of"]], "periods (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.periods"]], "plot() (finstmt.forecast.main.forecast method)": [[6, "finstmt.forecast.main.Forecast.plot"]], "plot() (finstmt.forecast.statements.forecastedfinancialstatements method)": [[6, "finstmt.forecast.statements.ForecastedFinancialStatements.plot"]], "plot_forecast() (in module finstmt.forecast.plot)": [[6, "finstmt.forecast.plot.plot_forecast"]], "plug (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.plug"]], "predict() (finstmt.forecast.main.forecast method)": [[6, "finstmt.forecast.main.Forecast.predict"]], "prophet_kwargs (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.prophet_kwargs"]], "prophet_kwargs (finstmt.forecast.config.forecastitemconfig attribute)": [[6, "finstmt.forecast.config.ForecastItemConfig.prophet_kwargs"]], "result (finstmt.forecast.main.forecast property)": [[6, "finstmt.forecast.main.Forecast.result"]], "series (finstmt.forecast.main.forecast property)": [[6, "finstmt.forecast.main.Forecast.series"]], "timeout (finstmt.forecast.config.forecastconfig attribute)": [[6, "finstmt.forecast.config.ForecastConfig.timeout"]], "to_manual() (finstmt.forecast.main.forecast method)": [[6, "finstmt.forecast.main.Forecast.to_manual"]], "to_series() (finstmt.forecast.config.forecastitemconfig method)": [[6, "finstmt.forecast.config.ForecastItemConfig.to_series"]], "averagemodel (class in finstmt.forecast.models.average)": [[7, "finstmt.forecast.models.average.AverageModel"]], "cagrmodel (class in finstmt.forecast.models.cagr)": [[7, "finstmt.forecast.models.cagr.CAGRModel"]], "fbprophetmodel (class in finstmt.forecast.models.prophet)": [[7, "finstmt.forecast.models.prophet.FBProphetModel"]], "forecastmodel (class in finstmt.forecast.models.base)": [[7, "finstmt.forecast.models.base.ForecastModel"]], "lineartrendmodel (class in finstmt.forecast.models.trend)": [[7, "finstmt.forecast.models.trend.LinearTrendModel"]], "manualforecastmodel (class in finstmt.forecast.models.manual)": [[7, "finstmt.forecast.models.manual.ManualForecastModel"]], "recentvaluemodel (class in finstmt.forecast.models.recent)": [[7, "finstmt.forecast.models.recent.RecentValueModel"]], "__init__() (finstmt.forecast.models.base.forecastmodel method)": [[7, "finstmt.forecast.models.base.ForecastModel.__init__"]], "__init__() (finstmt.forecast.models.manual.manualforecastmodel method)": [[7, "finstmt.forecast.models.manual.ManualForecastModel.__init__"]], "__init__() (finstmt.forecast.models.prophet.fbprophetmodel method)": [[7, "finstmt.forecast.models.prophet.FBProphetModel.__init__"]], "cagr (finstmt.forecast.models.cagr.cagrmodel attribute)": [[7, "finstmt.forecast.models.cagr.CAGRModel.cagr"]], "compare_freq_strs() (in module finstmt.forecast.models.base)": [[7, "finstmt.forecast.models.base.compare_freq_strs"]], "desired_freq_t_multiplier (finstmt.forecast.models.base.forecastmodel property)": [[7, "finstmt.forecast.models.base.ForecastModel.desired_freq_t_multiplier"]], "finstmt.forecast.models": [[7, "module-finstmt.forecast.models"]], "finstmt.forecast.models.average": [[7, "module-finstmt.forecast.models.average"]], "finstmt.forecast.models.base": [[7, "module-finstmt.forecast.models.base"]], "finstmt.forecast.models.cagr": [[7, "module-finstmt.forecast.models.cagr"]], "finstmt.forecast.models.chooser": [[7, "module-finstmt.forecast.models.chooser"]], "finstmt.forecast.models.manual": [[7, "module-finstmt.forecast.models.manual"]], "finstmt.forecast.models.prophet": [[7, "module-finstmt.forecast.models.prophet"]], "finstmt.forecast.models.recent": [[7, "module-finstmt.forecast.models.recent"]], "finstmt.forecast.models.trend": [[7, "module-finstmt.forecast.models.trend"]], "fit() (finstmt.forecast.models.average.averagemodel method)": [[7, "finstmt.forecast.models.average.AverageModel.fit"]], "fit() (finstmt.forecast.models.base.forecastmodel method)": [[7, "finstmt.forecast.models.base.ForecastModel.fit"]], "fit() (finstmt.forecast.models.cagr.cagrmodel method)": [[7, "finstmt.forecast.models.cagr.CAGRModel.fit"]], "fit() (finstmt.forecast.models.manual.manualforecastmodel method)": [[7, "finstmt.forecast.models.manual.ManualForecastModel.fit"]], "fit() (finstmt.forecast.models.prophet.fbprophetmodel method)": [[7, "finstmt.forecast.models.prophet.FBProphetModel.fit"]], "fit() (finstmt.forecast.models.recent.recentvaluemodel method)": [[7, "finstmt.forecast.models.recent.RecentValueModel.fit"]], "fit() (finstmt.forecast.models.trend.lineartrendmodel method)": [[7, "finstmt.forecast.models.trend.LinearTrendModel.fit"]], "get_model() (in module finstmt.forecast.models.chooser)": [[7, "finstmt.forecast.models.chooser.get_model"]], "historical_freq (finstmt.forecast.models.base.forecastmodel property)": [[7, "finstmt.forecast.models.base.ForecastModel.historical_freq"]], "last_historical_period (finstmt.forecast.models.base.forecastmodel attribute)": [[7, "finstmt.forecast.models.base.ForecastModel.last_historical_period"]], "last_value (finstmt.forecast.models.cagr.cagrmodel attribute)": [[7, "finstmt.forecast.models.cagr.CAGRModel.last_value"]], "mean (finstmt.forecast.models.average.averagemodel attribute)": [[7, "finstmt.forecast.models.average.AverageModel.mean"]], "model (finstmt.forecast.models.trend.lineartrendmodel attribute)": [[7, "finstmt.forecast.models.trend.LinearTrendModel.model"]], "model_result (finstmt.forecast.models.trend.lineartrendmodel attribute)": [[7, "finstmt.forecast.models.trend.LinearTrendModel.model_result"]], "orig_series (finstmt.forecast.models.base.forecastmodel attribute)": [[7, "finstmt.forecast.models.base.ForecastModel.orig_series"]], "plot() (finstmt.forecast.models.base.forecastmodel method)": [[7, "finstmt.forecast.models.base.ForecastModel.plot"]], "plot() (finstmt.forecast.models.prophet.fbprophetmodel method)": [[7, "finstmt.forecast.models.prophet.FBProphetModel.plot"]], "predict() (finstmt.forecast.models.average.averagemodel method)": [[7, "finstmt.forecast.models.average.AverageModel.predict"]], "predict() (finstmt.forecast.models.base.forecastmodel method)": [[7, "finstmt.forecast.models.base.ForecastModel.predict"]], "predict() (finstmt.forecast.models.cagr.cagrmodel method)": [[7, "finstmt.forecast.models.cagr.CAGRModel.predict"]], "predict() (finstmt.forecast.models.manual.manualforecastmodel method)": [[7, "finstmt.forecast.models.manual.ManualForecastModel.predict"]], "predict() (finstmt.forecast.models.prophet.fbprophetmodel method)": [[7, "finstmt.forecast.models.prophet.FBProphetModel.predict"]], "predict() (finstmt.forecast.models.recent.recentvaluemodel method)": [[7, "finstmt.forecast.models.recent.RecentValueModel.predict"]], "predict() (finstmt.forecast.models.trend.lineartrendmodel method)": [[7, "finstmt.forecast.models.trend.LinearTrendModel.predict"]], "recent (finstmt.forecast.models.manual.manualforecastmodel attribute)": [[7, "finstmt.forecast.models.manual.ManualForecastModel.recent"]], "recent (finstmt.forecast.models.recent.recentvaluemodel attribute)": [[7, "finstmt.forecast.models.recent.RecentValueModel.recent"]], "result (finstmt.forecast.models.base.forecastmodel attribute)": [[7, "finstmt.forecast.models.base.ForecastModel.result"]], "result_df (finstmt.forecast.models.base.forecastmodel attribute)": [[7, "finstmt.forecast.models.base.ForecastModel.result_df"]], "stderr (finstmt.forecast.models.average.averagemodel attribute)": [[7, "finstmt.forecast.models.average.AverageModel.stderr"]], "stderr (finstmt.forecast.models.cagr.cagrmodel attribute)": [[7, "finstmt.forecast.models.cagr.CAGRModel.stderr"]], "incomestatementdata (class in finstmt.inc.data)": [[8, "finstmt.inc.data.IncomeStatementData"]], "incomestatements (class in finstmt.inc.main)": [[8, "finstmt.inc.main.IncomeStatements"]], "__init__() (finstmt.inc.data.incomestatementdata method)": [[8, "finstmt.inc.data.IncomeStatementData.__init__"]], "__init__() (finstmt.inc.main.incomestatements method)": [[8, "finstmt.inc.main.IncomeStatements.__init__"]], "cogs (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.cogs"]], "dep_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.dep_exp"]], "ebit (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.ebit"]], "ebt (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.ebt"]], "effective_tax_rate (finstmt.inc.data.incomestatementdata property)": [[8, "finstmt.inc.data.IncomeStatementData.effective_tax_rate"]], "finstmt.inc": [[8, "module-finstmt.inc"]], "finstmt.inc.config": [[8, "module-finstmt.inc.config"]], "finstmt.inc.data": [[8, "module-finstmt.inc.data"]], "finstmt.inc.main": [[8, "module-finstmt.inc.main"]], "gain_on_sale_asset (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.gain_on_sale_asset"]], "gain_on_sale_invest (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.gain_on_sale_invest"]], "gross_profit (finstmt.inc.data.incomestatementdata property)": [[8, "finstmt.inc.data.IncomeStatementData.gross_profit"]], "impairment (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.impairment"]], "int_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.int_exp"]], "items_config (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.items_config"]], "net_income (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.net_income"]], "op_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.op_exp"]], "other_op_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.other_op_exp"]], "rd_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.rd_exp"]], "revenue (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.revenue"]], "sga (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.sga"]], "statement_cls (finstmt.inc.main.incomestatements attribute)": [[8, "finstmt.inc.main.IncomeStatements.statement_cls"]], "statement_name (finstmt.inc.main.incomestatements attribute)": [[8, "finstmt.inc.main.IncomeStatements.statement_name"]], "statements (finstmt.inc.main.incomestatements attribute)": [[8, "finstmt.inc.main.IncomeStatements.statements"]], "tax_exp (finstmt.inc.data.incomestatementdata attribute)": [[8, "finstmt.inc.data.IncomeStatementData.tax_exp"]], "itemconfig (class in finstmt.items.config)": [[9, "finstmt.items.config.ItemConfig"]], "itemconfig.config (class in finstmt.items.config)": [[9, "finstmt.items.config.ItemConfig.Config"]], "__init__() (finstmt.items.config.itemconfig method)": [[9, "finstmt.items.config.ItemConfig.__init__"]], "arbitrary_types_allowed (finstmt.items.config.itemconfig.config attribute)": [[9, "finstmt.items.config.ItemConfig.Config.arbitrary_types_allowed"]], "display_name (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.display_name"]], "expr_str (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.expr_str"]], "extract_names (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.extract_names"]], "finstmt.items": [[9, "module-finstmt.items"]], "finstmt.items.config": [[9, "module-finstmt.items.config"]], "force_positive (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.force_positive"]], "forecast_config (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.forecast_config"]], "key (finstmt.items.config.itemconfig attribute)": [[9, "finstmt.items.config.ItemConfig.key"]], "primary_name (finstmt.items.config.itemconfig property)": [[9, "finstmt.items.config.ItemConfig.primary_name"]], "finstmt.loaders": [[10, "module-finstmt.loaders"]], "finstmt.loaders.capiq": [[10, "module-finstmt.loaders.capiq"]], "load_capiq_df() (in module finstmt.loaders.capiq)": [[10, "finstmt.loaders.capiq.load_capiq_df"]], "balancesheetbalancedexception": [[11, "finstmt.resolver.forecast.BalanceSheetBalancedException"]], "forecastresolver (class in finstmt.resolver.forecast)": [[11, "finstmt.resolver.forecast.ForecastResolver"]], "plugresult (class in finstmt.resolver.forecast)": [[11, "finstmt.resolver.forecast.PlugResult"]], "resolverbase (class in finstmt.resolver.base)": [[11, "finstmt.resolver.base.ResolverBase"]], "statementsresolver (class in finstmt.resolver.history)": [[11, "finstmt.resolver.history.StatementsResolver"]], "__init__() (finstmt.resolver.base.resolverbase method)": [[11, "finstmt.resolver.base.ResolverBase.__init__"]], "__init__() (finstmt.resolver.forecast.forecastresolver method)": [[11, "finstmt.resolver.forecast.ForecastResolver.__init__"]], "__init__() (finstmt.resolver.forecast.plugresult method)": [[11, "finstmt.resolver.forecast.PlugResult.__init__"]], "all_eqs (finstmt.resolver.base.resolverbase property)": [[11, "finstmt.resolver.base.ResolverBase.all_eqs"]], "all_eqs (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.all_eqs"]], "all_eqs (finstmt.resolver.history.statementsresolver property)": [[11, "finstmt.resolver.history.StatementsResolver.all_eqs"]], "bs_balance_eqs (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.bs_balance_eqs"]], "finstmt.resolver": [[11, "module-finstmt.resolver"]], "finstmt.resolver.base": [[11, "module-finstmt.resolver.base"]], "finstmt.resolver.forecast": [[11, "module-finstmt.resolver.forecast"]], "finstmt.resolver.history": [[11, "module-finstmt.resolver.history"]], "finstmt.resolver.solve": [[11, "module-finstmt.resolver.solve"]], "forecast_dates (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.forecast_dates"]], "fun (finstmt.resolver.forecast.plugresult attribute)": [[11, "finstmt.resolver.forecast.PlugResult.fun"]], "get_solve_eqs_and_full_subs_dict() (in module finstmt.resolver.solve)": [[11, "finstmt.resolver.solve.get_solve_eqs_and_full_subs_dict"]], "is_timed_out (finstmt.resolver.forecast.plugresult property)": [[11, "finstmt.resolver.forecast.PlugResult.is_timed_out"]], "met_goal (finstmt.resolver.forecast.plugresult attribute)": [[11, "finstmt.resolver.forecast.PlugResult.met_goal"]], "num_periods (finstmt.resolver.base.resolverbase property)": [[11, "finstmt.resolver.base.ResolverBase.num_periods"]], "num_periods (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.num_periods"]], "num_periods (finstmt.resolver.history.statementsresolver property)": [[11, "finstmt.resolver.history.StatementsResolver.num_periods"]], "numpy_solve() (in module finstmt.resolver.solve)": [[11, "finstmt.resolver.solve.numpy_solve"]], "plug_configs (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.plug_configs"]], "plug_keys (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.plug_keys"]], "plug_x0 (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.plug_x0"]], "res (finstmt.resolver.forecast.plugresult attribute)": [[11, "finstmt.resolver.forecast.PlugResult.res"]], "resolve_balance_sheet() (finstmt.resolver.forecast.forecastresolver method)": [[11, "finstmt.resolver.forecast.ForecastResolver.resolve_balance_sheet"]], "resolve_balance_sheet() (in module finstmt.resolver.forecast)": [[11, "finstmt.resolver.forecast.resolve_balance_sheet"]], "results_dict_to_sympy_dict() (in module finstmt.resolver.solve)": [[11, "finstmt.resolver.solve.results_dict_to_sympy_dict"]], "set_solve_eqs_and_full_subs_dict() (finstmt.resolver.base.resolverbase method)": [[11, "finstmt.resolver.base.ResolverBase.set_solve_eqs_and_full_subs_dict"]], "solve_eqs (finstmt.resolver.base.resolverbase attribute)": [[11, "finstmt.resolver.base.ResolverBase.solve_eqs"]], "solve_eqs (finstmt.resolver.forecast.forecastresolver attribute)": [[11, "finstmt.resolver.forecast.ForecastResolver.solve_eqs"]], "solve_eqs (finstmt.resolver.history.statementsresolver attribute)": [[11, "finstmt.resolver.history.StatementsResolver.solve_eqs"]], "solve_equations() (in module finstmt.resolver.solve)": [[11, "finstmt.resolver.solve.solve_equations"]], "start_time (finstmt.resolver.forecast.plugresult attribute)": [[11, "finstmt.resolver.forecast.PlugResult.start_time"]], "subs_dict (finstmt.resolver.base.resolverbase attribute)": [[11, "finstmt.resolver.base.ResolverBase.subs_dict"]], "subs_dict (finstmt.resolver.forecast.forecastresolver attribute)": [[11, "finstmt.resolver.forecast.ForecastResolver.subs_dict"]], "subs_dict (finstmt.resolver.history.statementsresolver attribute)": [[11, "finstmt.resolver.history.StatementsResolver.subs_dict"]], "sympy_dict_to_results_dict() (in module finstmt.resolver.solve)": [[11, "finstmt.resolver.solve.sympy_dict_to_results_dict"]], "sympy_subs_dict (finstmt.resolver.base.resolverbase property)": [[11, "finstmt.resolver.base.ResolverBase.sympy_subs_dict"]], "sympy_subs_dict (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.sympy_subs_dict"]], "sympy_subs_dict (finstmt.resolver.history.statementsresolver property)": [[11, "finstmt.resolver.history.StatementsResolver.sympy_subs_dict"]], "t (finstmt.resolver.base.resolverbase property)": [[11, "finstmt.resolver.base.ResolverBase.t"]], "t_indexed_eqs (finstmt.resolver.base.resolverbase property)": [[11, "finstmt.resolver.base.ResolverBase.t_indexed_eqs"]], "t_indexed_eqs (finstmt.resolver.forecast.forecastresolver property)": [[11, "finstmt.resolver.forecast.ForecastResolver.t_indexed_eqs"]], "t_indexed_eqs (finstmt.resolver.history.statementsresolver property)": [[11, "finstmt.resolver.history.StatementsResolver.t_indexed_eqs"]], "time_elapsed (finstmt.resolver.forecast.plugresult property)": [[11, "finstmt.resolver.forecast.PlugResult.time_elapsed"]], "timeout (finstmt.resolver.forecast.plugresult attribute)": [[11, "finstmt.resolver.forecast.PlugResult.timeout"]], "to_statements() (finstmt.resolver.base.resolverbase method)": [[11, "finstmt.resolver.base.ResolverBase.to_statements"]], "to_statements() (finstmt.resolver.forecast.forecastresolver method)": [[11, "finstmt.resolver.forecast.ForecastResolver.to_statements"]], "to_statements() (finstmt.resolver.history.statementsresolver method)": [[11, "finstmt.resolver.history.StatementsResolver.to_statements"]]}})